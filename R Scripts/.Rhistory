knitr::opts_chunk$set(echo = TRUE)
library(factoextra)
library(stringr)
library(ggplot2)
library(ggsci)
library(grid)
library(gridExtra)
brain_tissues = c("Brain - Amygdala", "Brain - Anterior cingulate cortex", "Brain - Caudate", "Brain - Cerebellar Hemisphere", "Brain - Cerebellum", "Brain - Cortex", "Brain - Frontal Cortex", "Brain - Hippocampus", "Brain - Hypothalamus", "Brain - Nucleus accumbens", "Brain - Putamen", "Brain - Spinal cord", "Brain - Substantia nigra")
count = 0
for (brain_tiss in brain_tissues) {
count = count +1
#Select the specific genes
data_temp = diff_genes_ann_0.01[(sapply(diff_genes_ann_0.01$tissues, function(x) {grepl(brain_tiss, toString(x))}) &
!sapply(diff_genes_ann_0.01$tissues, function(x)
{grepl(paste(brain_tissues[!brain_tissues%in%c(brain_tiss)], collapse = "|"),
toString(x))})),]
if(dim(data_temp)[1] >0) {
#Get the data for our plot
data_raw = data.frame(Week4 = apply(data_temp[1:3], 1, median), Week5 =  apply(data_temp[4:6], 1, median), Week6 =  apply(data_temp[7:9], 1, median),
Week7=apply(data_temp[10:12], 1, median), Week8 =  apply(data_temp[13:15], 1, median), Week9 =  apply(data_temp[16:18], 1, median))
rownames(data_raw) = data_temp$ensembl.transcript
data_plot = data.frame(Week = c(sapply(c(4:9), function(x) {rep(x, dim(data_raw)[1])})), Transcript = factor(c(rep(rownames(data_raw), 6))), Expression = NA)
for(s in 1:6) {
for(t in 1:dim(data_raw)[1]) {
data_plot$Expression[t + (s-1)*dim(data_raw)[1]] = data_raw[t, s]
}
}
#Plot the data
assign(str_glue(brain_tiss, "_plot1"), ggplot(data_plot, aes(x = Week, y= Expression, group = Transcript))   + geom_line(aes(colour = Transcript)) +
geom_point(aes(colour = Transcript)) + labs(title = brain_tiss) + theme_classic() )
}
}
library(factoextra)
library(stringr)
library(ggplot2)
library(ggsci)
library(grid)
library(gridExtra)
load("diff_genes_ann_0.01.RData")
brain_tissues = c("Brain - Amygdala", "Brain - Anterior cingulate cortex", "Brain - Caudate", "Brain - Cerebellar Hemisphere", "Brain - Cerebellum", "Brain - Cortex", "Brain - Frontal Cortex", "Brain - Hippocampus", "Brain - Hypothalamus", "Brain - Nucleus accumbens", "Brain - Putamen", "Brain - Spinal cord", "Brain - Substantia nigra")
count = 0
for (brain_tiss in brain_tissues) {
count = count +1
#Select the specific genes
data_temp = diff_genes_ann_0.01[(sapply(diff_genes_ann_0.01$tissues, function(x) {grepl(brain_tiss, toString(x))}) &
!sapply(diff_genes_ann_0.01$tissues, function(x)
{grepl(paste(brain_tissues[!brain_tissues%in%c(brain_tiss)], collapse = "|"),
toString(x))})),]
if(dim(data_temp)[1] >0) {
#Get the data for our plot
data_raw = data.frame(Week4 = apply(data_temp[1:3], 1, median), Week5 =  apply(data_temp[4:6], 1, median), Week6 =  apply(data_temp[7:9], 1, median),
Week7=apply(data_temp[10:12], 1, median), Week8 =  apply(data_temp[13:15], 1, median), Week9 =  apply(data_temp[16:18], 1, median))
rownames(data_raw) = data_temp$ensembl.transcript
data_plot = data.frame(Week = c(sapply(c(4:9), function(x) {rep(x, dim(data_raw)[1])})), Transcript = factor(c(rep(rownames(data_raw), 6))), Expression = NA)
for(s in 1:6) {
for(t in 1:dim(data_raw)[1]) {
data_plot$Expression[t + (s-1)*dim(data_raw)[1]] = data_raw[t, s]
}
}
#Plot the data
assign(str_glue(brain_tiss, "_plot1"), ggplot(data_plot, aes(x = Week, y= Expression, group = Transcript))   + geom_line(aes(colour = Transcript)) +
geom_point(aes(colour = Transcript)) + labs(title = brain_tiss) + theme_classic() )
}
}
ff = sapply(brain_tissues, function(x){str_glue(x, "_plot1")})
data_plot
#grid.arrange(get(ff[1]), get(ff[2]), get(ff[4]), get(ff[5]), get(ff[6]), get(ff[7]), get(ff[8]), get(ff[9]), get(ff[10]), get(ff[11]), get(ff[12]), get(ff[13]))
# Brain - Caudata so ff[3] has no unique genes
grid.arrange(get(ff[1]), get(ff[2]), get(ff[4]), get(ff[5]), get(ff[6]), get(ff[7]), get(ff[8]), get(ff[9]), get(ff[10]), get(ff[11]), get(ff[12]), get(ff[13]))
embryo_df_tissues
load("embryo_df_tissues.RData)
load("embryo_df_tissues.RData")
load("embryo_df_tissues.RData")
embryo_df_tissues
embryo_df_tissues
load("embryo_df_tissues.RData")
embryo_df_tissues_median  = data.frame(Week4 = apply(embryo_df_tissues[1:3], 1, median), Week5 =  apply(embryo_df_tissues[4:6], 1, median), Week6 =  apply(embryo_df_tissues[7:9], 1, median), Week7=apply(embryo_df_tissues[10:12], 1, median), Week8 =  apply(embryo_df_tissues[13:15], 1, median), Week9 =  apply(embryo_df_tissues[16:18], 1, median))
embryo_df_tissues_median = cbind(embryo_df_tissues_median, embryo_df_tissues[,c(19,32)])
embryo_df_tissues_median
# Select an modify the data used for kmeans
bool_contained = sapply(embyro_df_tissues_median$tissues, function(x) {grepl(tissue, toString(x))})
# Select an modify the data used for kmeans
bool_contained = sapply(embyro_df_tissues_median$tissues, function(x) {grepl("Brain - Frontal Cortex", toString(x))})
load("embryo_df_tissues.RData")
embryo_df_tissues_median  = data.frame(Week4 = apply(embryo_df_tissues[1:3], 1, median), Week5 =  apply(embryo_df_tissues[4:6], 1, median), Week6 =  apply(embryo_df_tissues[7:9], 1, median), Week7=apply(embryo_df_tissues[10:12], 1, median), Week8 =  apply(embryo_df_tissues[13:15], 1, median), Week9 =  apply(embryo_df_tissues[16:18], 1, median))
embryo_df_tissues_median = cbind(embryo_df_tissues_median, embryo_df_tissues[,c(19,32)])
embryo_df_tissues_median
# Select the data from a tissues
bool_contained = sapply(embyro_df_tissues_median$tissues, function(x) {grepl("Brain - Frontal Cortex", toString(x))})
# Select the data from a tissues
bool_contained = sapply(embryo_df_tissues_median$tissues, function(x) {grepl("Brain - Frontal Cortex", toString(x))})
data_temp = embryo_df_tissues_median[bool_contained,]
data_temp
data_plot = data.frame(Week = c(sapply(c(4:9), function(x) {rep(x, length(threshold)), Treshold = factor(c(rep(treshold, 6)), Percentage = NA)
threshold = c(6.8, 7.0, 7.2, 7.4, 7.6)
data_plot = data.frame(Week = c(sapply(c(4:9), function(x) {rep(x, length(threshold))}), Treshold = factor(c(rep(treshold, 6)), Percentage = NA)
data_plot = data.frame(Week = c(sapply(c(4:9), function(x) {rep(x, length(threshold))}), Treshold = factor(c(rep(treshold, 6)), Percentage = NA)
data_plot = data.frame(Week = c(sapply(c(4:9), function(x) {rep(x, length(threshold))}), Treshold = factor(c(rep(treshold, 6)), Percentage = NA))
for(s in 1:6) {
data_plot = data.frame(Week = c(sapply(c(4:9), function(x) {rep(x, length(threshold))}), Treshold = factor(c(rep(treshold, 6))), Percentage = NA)
for(s in 1:6) {
data_plot = data.frame(Week = c(sapply(c(4:9), function(x) {rep(x, length(threshold))}), Treshold = factor(c(rep(treshold, 6))), Percentage = NA)
data.plot
data_plot = data.frame(Week = c(sapply(c(4:9), function(x) {rep(x, length(threshold))})), Treshold = factor(c(rep(treshold, 6))), Percentage = NA)
threshold = c(6.8, 7.0, 7.2, 7.4, 7.6)
data_plot = data.frame(Week = c(sapply(c(4:9), function(x) {rep(x, length(threshold))})), Treshold = factor(c(rep(treshold, 6))), Percentage = NA)
data_plot = data.frame(Week = c(sapply(c(4:9), function(x) {rep(x, length(threshold))})), Threshold = factor(c(rep(threshold, 6))), Percentage = NA)
data.plot
data_plot
data_temp
bool_contained = sapply(embryo_df_tissues_median$tissues, function(x) {grepl("Brain - Frontal Cortex", toString(x))})
data_temp = embryo_df_tissues_median[bool_contained,]
#Determine the percentage of expressed genes
count = 0
data_plot = data.frame(Week = c(sapply(c(4:9), function(x) {rep(x, length(threshold))})), Threshold = factor(c(rep(threshold, 6))), Percentage = NA)
for(s in 1:6) {
for(t in 1:length(threshold)) {
count = count +1
data_plot$Percentage[count] = sum(which(data_temp[,str_glue("Week", s)] > threshold[t]))/length(dim(data_temp)[1])
}
}
for(s in 4:9) {
for(t in 1:length(threshold)) {
count = count +1
data_plot$Percentage[count] = sum(which(data_temp[,str_glue("Week", s)] > threshold[t]))/length(dim(data_temp)[1])
}
}
sum(which(data_temp[,str_glue("Week", 4)] > threshold[t]))/length(dim(data_temp)[1])
sum(which(data_temp[,str_glue("Week", 4)] > threshold[t]))
which(data_temp[,str_glue("Week", 4)] > threshold[t])
data_temp[,str_glue("Week", 4)] > threshold[t]
data_temp[,str_glue("Week", 4)] > threshold[t]
sum(data_temp[,str_glue("Week", 4)] > threshold[t])
sum(data_temp[,str_glue("Week", 4)] > threshold[t])/length(dim(data_temp)[1])
sum(data_temp[,str_glue("Week", 4)] > threshold[t])/length(dim(data_temp)[1])
sum(data_temp[,str_glue("Week", 4)] > threshold[t])/(length(dim(data_temp)[1]))
(sum(data_temp[,str_glue("Week", 4)] > threshold[t]))/(length(dim(data_temp)[1]))
length(dim(data_temp)[1])
(sum(data_temp[,str_glue("Week", 4)] > threshold[t]))/(dim(data_temp)[1])
for(s in 4:9) {
for(t in 1:length(threshold)) {
count = count +1
data_plot$Percentage[count] = (sum(data_temp[,str_glue("Week", s)] > threshold[t]))/(dim(data_temp)[1])
}
}
#Determine the percentage of expressed genes
count = 0
a = c()
data_plot = data.frame(Week = c(sapply(c(4:9), function(x) {rep(x, length(threshold))})), Threshold = factor(c(rep(threshold, 6))), Percentage = NA)
for(s in 4:9) {
for(t in 1:length(threshold)) {
count = count +1
a  = c(a,(sum(data_temp[,str_glue("Week", s)] > threshold[t]))/(dim(data_temp)[1]))
}
}
a
data_plot$Threshold= a
data_plot
data_plot = data.frame(Week = c(sapply(c(4:9), function(x) {rep(x, length(threshold))})), Threshold = factor(c(rep(threshold, 6))), Percentage = NA)
data_plot$Percentage= a
data_plot
# List the tissues
#tissues = c("Adipose - Subcutaneous", "Adipose - Visceral", "Adipose", "Cells - Transformed fibroblasts", "Skin - Not Sun Exposed", "Skin - Sun Exposed", "Skin", "Muscle - Skeletal", "Bladder", "Kidney - Cortex") #"Kidney - Medulla", "Kidney"
#tissues = c("Colon - Sigmoid", "Colon - Transverse", "Colon", "Esophagus - Gastroesophageal Junction", "Esophagus - Mucosa", "Esophagus - Muscularis", "Esophagus", "Liver", "Minor Salivary Gland", "Pancreas", "Small Intestine - Terminal Ileum", "Spleen", "Stomach")
#tissues = c("Breast - Mammary Tissue", "Cervix - Ectocervix", "Cervix - Endocervix", "Cervix", "Fallopian Tube", "Ovary", "Uterus", "Vagina", "Prostate", "Testis", "Adrenal Gland", "Pituitary", "Thyroid")
#tissues = c("Artery - Aorta", "Artery - Coronary", "Artery - Tibial", "Artery", "Heart - Atrial Appendage", "Heart - Left Ventricle", "Heart", "Lung", "Whole Blood", "Cells - EBV-transformed lymphocytes")
tissues = c("Brain - Amygdala", "Brain - Anterior cingulate cortex", "Brain - Caudate", "Brain - Cerebellar Hemisphere", "Brain - Cerebellum", "Brain - Cortex", "Brain - Frontal Cortex", "Brain - Hippocampus", "Brain - Hypothalamus", "Brain - Nucleus accumbens", "Brain - Putamen", "Brain - Spinal cord", "Brain - Substantia nigra", "Brain", "Nerve - Tibial")
threshold = c(6.8, 7.0, 7.2, 7.4, 7.6)
for (tissue in tissues) {
# Select the data from a tissues
bool_contained = sapply(embryo_df_tissues_median$tissues, function(x) {grepl("Brain - Frontal Cortex", toString(x))})
data_temp = embryo_df_tissues_median[bool_contained,]
#Determine the percentage of expressed genes
count = 0
a = c()
data_plot = data.frame(Week = c(sapply(c(4:9), function(x) {rep(x, length(threshold))})), Threshold = factor(c(rep(threshold, 6))), Percentage = NA)
for(s in 4:9) {
for(t in 1:length(threshold)) {
count = count +1
a  = c(a,(sum(data_temp[,str_glue("Week", s)] > threshold[t]))/(dim(data_temp)[1]))
}
}
data_plot$Percentage= a
#Plot the data
assign(str_glue(brain_tiss, "_percentage"), ggplot(data_plot, aes(x = Week, y= Percentage, group = Threshold))   + geom_line(aes(colour = Threshold)) +
geom_point(aes(colour = Threshold, shape = Threshold)) + labs(title = brain_tiss) + theme_classic() )
}
ff = sapply(tissues, function(x){str_glue(x, "_percentage")})
#grid.arrange(get(ff[1]), get(ff[2]), get(ff[3]), get(ff[4]), get(ff[5]), get(ff[6]), get(ff[7]), get(ff[8]), get(ff[9]), get(ff[10]), get(ff[11]), get(ff[12]), get(ff[13]), get(ff[14]), get(ff[15]))
grid.arrange(get(ff[1]), get(ff[2]), get(ff[3]), get(ff[4]), get(ff[5]), get(ff[6]), get(ff[7]), get(ff[8]), get(ff[9]), get(ff[10]), get(ff[11]), get(ff[12]), get(ff[13]), get(ff[14]), get(ff[15]))
# List the tissues
#tissues = c("Adipose - Subcutaneous", "Adipose - Visceral", "Adipose", "Cells - Transformed fibroblasts", "Skin - Not Sun Exposed", "Skin - Sun Exposed", "Skin", "Muscle - Skeletal", "Bladder", "Kidney - Cortex") #"Kidney - Medulla", "Kidney"
#tissues = c("Colon - Sigmoid", "Colon - Transverse", "Colon", "Esophagus - Gastroesophageal Junction", "Esophagus - Mucosa", "Esophagus - Muscularis", "Esophagus", "Liver", "Minor Salivary Gland", "Pancreas", "Small Intestine - Terminal Ileum", "Spleen", "Stomach")
#tissues = c("Breast - Mammary Tissue", "Cervix - Ectocervix", "Cervix - Endocervix", "Cervix", "Fallopian Tube", "Ovary", "Uterus", "Vagina", "Prostate", "Testis", "Adrenal Gland", "Pituitary", "Thyroid")
#tissues = c("Artery - Aorta", "Artery - Coronary", "Artery - Tibial", "Artery", "Heart - Atrial Appendage", "Heart - Left Ventricle", "Heart", "Lung", "Whole Blood", "Cells - EBV-transformed lymphocytes")
tissues = c("Brain - Amygdala", "Brain - Anterior cingulate cortex", "Brain - Caudate", "Brain - Cerebellar Hemisphere", "Brain - Cerebellum", "Brain - Cortex", "Brain - Frontal Cortex", "Brain - Hippocampus", "Brain - Hypothalamus", "Brain - Nucleus accumbens", "Brain - Putamen", "Brain - Spinal cord", "Brain - Substantia nigra", "Brain", "Nerve - Tibial")
threshold = c(6.8, 7.0, 7.2, 7.4, 7.6)
for (tissue in tissues) {
# Select the data from a tissues
bool_contained = sapply(embryo_df_tissues_median$tissues, function(x) {grepl(tissue, toString(x))})
data_temp = embryo_df_tissues_median[bool_contained,]
#Determine the percentage of expressed genes
count = 0
a = c()
data_plot = data.frame(Week = c(sapply(c(4:9), function(x) {rep(x, length(threshold))})), Threshold = factor(c(rep(threshold, 6))), Percentage = NA)
for(s in 4:9) {
for(t in 1:length(threshold)) {
count = count +1
a  = c(a,(sum(data_temp[,str_glue("Week", s)] > threshold[t]))/(dim(data_temp)[1]))
}
}
data_plot$Percentage= a
#Plot the data
assign(str_glue(brain_tiss, "_percentage"), ggplot(data_plot, aes(x = Week, y= Percentage, group = Threshold))   + geom_line(aes(colour = Threshold)) +
geom_point(aes(colour = Threshold, shape = Threshold)) + labs(title = brain_tiss) + theme_classic() )
}
ff = sapply(tissues, function(x){str_glue(x, "_percentage")})
#grid.arrange(get(ff[1]), get(ff[2]), get(ff[3]), get(ff[4]), get(ff[5]), get(ff[6]), get(ff[7]), get(ff[8]), get(ff[9]), get(ff[10]), get(ff[11]), get(ff[12]), get(ff[13]), get(ff[14]), get(ff[15]))
grid.arrange(get(ff[1]), get(ff[2]), get(ff[3]), get(ff[4]), get(ff[5]), get(ff[6]), get(ff[7]), get(ff[8]), get(ff[9]), get(ff[10]), get(ff[11]), get(ff[12]), get(ff[13]), get(ff[14]), get(ff[15]))
# List the tissues
#tissues = c("Adipose - Subcutaneous", "Adipose - Visceral", "Adipose", "Cells - Transformed fibroblasts", "Skin - Not Sun Exposed", "Skin - Sun Exposed", "Skin", "Muscle - Skeletal", "Bladder", "Kidney - Cortex") #"Kidney - Medulla", "Kidney"
#tissues = c("Colon - Sigmoid", "Colon - Transverse", "Colon", "Esophagus - Gastroesophageal Junction", "Esophagus - Mucosa", "Esophagus - Muscularis", "Esophagus", "Liver", "Minor Salivary Gland", "Pancreas", "Small Intestine - Terminal Ileum", "Spleen", "Stomach")
#tissues = c("Breast - Mammary Tissue", "Cervix - Ectocervix", "Cervix - Endocervix", "Cervix", "Fallopian Tube", "Ovary", "Uterus", "Vagina", "Prostate", "Testis", "Adrenal Gland", "Pituitary", "Thyroid")
#tissues = c("Artery - Aorta", "Artery - Coronary", "Artery - Tibial", "Artery", "Heart - Atrial Appendage", "Heart - Left Ventricle", "Heart", "Lung", "Whole Blood", "Cells - EBV-transformed lymphocytes")
tissues = c("Brain - Amygdala", "Brain - Anterior cingulate cortex", "Brain - Caudate", "Brain - Cerebellar Hemisphere", "Brain - Cerebellum", "Brain - Cortex", "Brain - Frontal Cortex", "Brain - Hippocampus", "Brain - Hypothalamus", "Brain - Nucleus accumbens", "Brain - Putamen", "Brain - Spinal cord", "Brain - Substantia nigra", "Brain", "Nerve - Tibial")
threshold = c(6.8, 7.0, 7.2, 7.4, 7.6)
for (tissue in tissues) {
# Select the data from a tissues
bool_contained = sapply(embryo_df_tissues_median$tissues, function(x) {grepl(tissue, toString(x))})
data_temp = embryo_df_tissues_median[bool_contained,]
#Determine the percentage of expressed genes
count = 0
a = c()
data_plot = data.frame(Week = c(sapply(c(4:9), function(x) {rep(x, length(threshold))})), Threshold = factor(c(rep(threshold, 6))), Percentage = NA)
for(s in 4:9) {
for(t in 1:length(threshold)) {
count = count +1
a  = c(a,(sum(data_temp[,str_glue("Week", s)] > threshold[t]))/(dim(data_temp)[1]))
}
}
data_plot$Percentage= a
#Plot the data
assign(str_glue(tissue, "_percentage"), ggplot(data_plot, aes(x = Week, y= Percentage, group = Threshold))   + geom_line(aes(colour = Threshold)) +
geom_point(aes(colour = Threshold, shape = Threshold)) + labs(title = tissue) + theme_classic() )
}
ff = sapply(tissues, function(x){str_glue(x, "_percentage")})
#grid.arrange(get(ff[1]), get(ff[2]), get(ff[3]), get(ff[4]), get(ff[5]), get(ff[6]), get(ff[7]), get(ff[8]), get(ff[9]), get(ff[10]), get(ff[11]), get(ff[12]), get(ff[13]), get(ff[14]), get(ff[15]))
grid.arrange(get(ff[1]), get(ff[2]), get(ff[3]), get(ff[4]), get(ff[5]), get(ff[6]), get(ff[7]), get(ff[8]), get(ff[9]), get(ff[10]), get(ff[11]), get(ff[12]), get(ff[13]), get(ff[14]), get(ff[15]))
# List the tissues
#tissues = c("Adipose - Subcutaneous", "Adipose - Visceral", "Adipose", "Cells - Transformed fibroblasts", "Skin - Not Sun Exposed", "Skin - Sun Exposed", "Skin", "Muscle - Skeletal", "Bladder", "Kidney - Cortex") #"Kidney - Medulla", "Kidney"
#tissues = c("Colon - Sigmoid", "Colon - Transverse", "Colon", "Esophagus - Gastroesophageal Junction", "Esophagus - Mucosa", "Esophagus - Muscularis", "Esophagus", "Liver", "Minor Salivary Gland", "Pancreas", "Small Intestine - Terminal Ileum", "Spleen", "Stomach")
#tissues = c("Breast - Mammary Tissue", "Cervix - Ectocervix", "Cervix - Endocervix", "Cervix", "Fallopian Tube", "Ovary", "Uterus", "Vagina", "Prostate", "Testis", "Adrenal Gland", "Pituitary", "Thyroid")
#tissues = c("Artery - Aorta", "Artery - Coronary", "Artery - Tibial", "Artery", "Heart - Atrial Appendage", "Heart - Left Ventricle", "Heart", "Lung", "Whole Blood", "Cells - EBV-transformed lymphocytes")
tissues = c("Brain - Amygdala", "Brain - Anterior cingulate cortex", "Brain - Caudate", "Brain - Cerebellar Hemisphere", "Brain - Cerebellum", "Brain - Cortex", "Brain - Frontal Cortex", "Brain - Hippocampus", "Brain - Hypothalamus", "Brain - Nucleus accumbens", "Brain - Putamen", "Brain - Spinal cord", "Brain - Substantia nigra", "Brain", "Nerve - Tibial")
threshold = c(6.8, 7.0, 7.2, 7.4, 7.6)
for (tissue in tissues) {
# Select the data from a tissues
bool_contained = sapply(embryo_df_tissues_median$tissues, function(x) {grepl(tissue, toString(x))})
data_temp = embryo_df_tissues_median[bool_contained,]
#Determine the percentage of expressed genes
count = 0
a = c()
data_plot = data.frame(Week = c(sapply(c(4:9), function(x) {rep(x, length(threshold))})), Threshold = factor(c(rep(threshold, 6))), Percentage = NA)
for(s in 4:9) {
for(t in 1:length(threshold)) {
count = count +1
a  = c(a,(sum(data_temp[,str_glue("Week", s)] > threshold[t]))/(dim(data_temp)[1]))
}
}
data_plot$Percentage= a
#Plot the data
assign(str_glue(tissue, "_percentage"), ggplot(data_plot, aes(x = Week, y= Percentage, group = Threshold))   + geom_line(aes(colour = Threshold)) +
geom_point(aes(colour = Threshold, shape = Threshold)) + labs(title = tissue) + theme_classic() + ylim(0,1))
}
ff = sapply(tissues, function(x){str_glue(x, "_percentage")})
#grid.arrange(get(ff[1]), get(ff[2]), get(ff[3]), get(ff[4]), get(ff[5]), get(ff[6]), get(ff[7]), get(ff[8]), get(ff[9]), get(ff[10]), get(ff[11]), get(ff[12]), get(ff[13]), get(ff[14]), get(ff[15]))
grid.arrange(get(ff[1]), get(ff[2]), get(ff[3]), get(ff[4]), get(ff[5]), get(ff[6]), get(ff[7]), get(ff[8]), get(ff[9]), get(ff[10]), get(ff[11]), get(ff[12]), get(ff[13]), get(ff[14]), get(ff[15]))
# List the tissues
tissues = c("Adipose - Subcutaneous", "Adipose - Visceral", "Adipose", "Cells - Transformed fibroblasts", "Skin - Not Sun Exposed", "Skin - Sun Exposed", "Skin", "Muscle - Skeletal", "Bladder", "Kidney - Cortex") #"Kidney - Medulla", "Kidney"
#tissues = c("Colon - Sigmoid", "Colon - Transverse", "Colon", "Esophagus - Gastroesophageal Junction", "Esophagus - Mucosa", "Esophagus - Muscularis", "Esophagus", "Liver", "Minor Salivary Gland", "Pancreas", "Small Intestine - Terminal Ileum", "Spleen", "Stomach")
#tissues = c("Breast - Mammary Tissue", "Cervix - Ectocervix", "Cervix - Endocervix", "Cervix", "Fallopian Tube", "Ovary", "Uterus", "Vagina", "Prostate", "Testis", "Adrenal Gland", "Pituitary", "Thyroid")
#tissues = c("Artery - Aorta", "Artery - Coronary", "Artery - Tibial", "Artery", "Heart - Atrial Appendage", "Heart - Left Ventricle", "Heart", "Lung", "Whole Blood", "Cells - EBV-transformed lymphocytes")
#tissues = c("Brain - Amygdala", "Brain - Anterior cingulate cortex", "Brain - Caudate", "Brain - Cerebellar Hemisphere", "Brain - Cerebellum", "Brain - Cortex", "Brain - Frontal Cortex", "Brain - Hippocampus", "Brain - Hypothalamus", "Brain - Nucleus accumbens", "Brain - Putamen", "Brain - Spinal cord", "Brain - Substantia nigra", "Brain", "Nerve - Tibial")
threshold = c(6.8, 7.0, 7.2, 7.4, 7.6)
for (tissue in tissues) {
# Select the data from a tissues
bool_contained = sapply(embryo_df_tissues_median$tissues, function(x) {grepl(tissue, toString(x))})
data_temp = embryo_df_tissues_median[bool_contained,]
#Determine the percentage of expressed genes
count = 0
a = c()
data_plot = data.frame(Week = c(sapply(c(4:9), function(x) {rep(x, length(threshold))})), Threshold = factor(c(rep(threshold, 6))), Percentage = NA)
for(s in 4:9) {
for(t in 1:length(threshold)) {
count = count +1
a  = c(a,(sum(data_temp[,str_glue("Week", s)] > threshold[t]))/(dim(data_temp)[1]))
}
}
data_plot$Percentage= a
#Plot the data
assign(str_glue(tissue, "_percentage"), ggplot(data_plot, aes(x = Week, y= Percentage, group = Threshold))   + geom_line(aes(colour = Threshold)) +
geom_point(aes(colour = Threshold, shape = Threshold)) + labs(title = tissue) + theme_classic() + ylim(0,1))
}
ff = sapply(tissues, function(x){str_glue(x, "_percentage")})
#grid.arrange(get(ff[1]), get(ff[2]), get(ff[3]), get(ff[4]), get(ff[5]), get(ff[6]), get(ff[7]), get(ff[8]), get(ff[9]), get(ff[10]), get(ff[11]), get(ff[12]), get(ff[13]), get(ff[14]), get(ff[15]))
grid.arrange(get(ff[1]), get(ff[2]), get(ff[3]), get(ff[4]), get(ff[5]), get(ff[6]), get(ff[7]), get(ff[8]), get(ff[9]), get(ff[10]))
threshold = c(6.6,6.8, 7.0, 7.2, 7.4, 7.6, 7.8,8.0,8.2, 8.4 9)
threshold = c(6.6,6.8, 7.0, 7.2, 7.4, 7.6, 7.8,8.0,8.2, 8.4, 9)
# List the tissues
tissues = c("Adipose - Subcutaneous", "Adipose - Visceral", "Adipose", "Cells - Transformed fibroblasts", "Skin - Not Sun Exposed", "Skin - Sun Exposed", "Skin", "Muscle - Skeletal", "Bladder", "Kidney - Cortex") #"Kidney - Medulla", "Kidney"
#tissues = c("Colon - Sigmoid", "Colon - Transverse", "Colon", "Esophagus - Gastroesophageal Junction", "Esophagus - Mucosa", "Esophagus - Muscularis", "Esophagus", "Liver", "Minor Salivary Gland", "Pancreas", "Small Intestine - Terminal Ileum", "Spleen", "Stomach")
#tissues = c("Breast - Mammary Tissue", "Cervix - Ectocervix", "Cervix - Endocervix", "Cervix", "Fallopian Tube", "Ovary", "Uterus", "Vagina", "Prostate", "Testis", "Adrenal Gland", "Pituitary", "Thyroid")
#tissues = c("Artery - Aorta", "Artery - Coronary", "Artery - Tibial", "Artery", "Heart - Atrial Appendage", "Heart - Left Ventricle", "Heart", "Lung", "Whole Blood", "Cells - EBV-transformed lymphocytes")
#tissues = c("Brain - Amygdala", "Brain - Anterior cingulate cortex", "Brain - Caudate", "Brain - Cerebellar Hemisphere", "Brain - Cerebellum", "Brain - Cortex", "Brain - Frontal Cortex", "Brain - Hippocampus", "Brain - Hypothalamus", "Brain - Nucleus accumbens", "Brain - Putamen", "Brain - Spinal cord", "Brain - Substantia nigra", "Brain", "Nerve - Tibial")
threshold = c(6.6,6.8, 7.0, 7.2, 7.4, 7.6, 7.8,8.0,8.2, 8.4, 9)
for (tissue in tissues) {
# Select the data from a tissues
bool_contained = sapply(embryo_df_tissues_median$tissues, function(x) {grepl(tissue, toString(x))})
data_temp = embryo_df_tissues_median[bool_contained,]
#Determine the percentage of expressed genes
count = 0
a = c()
data_plot = data.frame(Week = c(sapply(c(4:9), function(x) {rep(x, length(threshold))})), Threshold = factor(c(rep(threshold, 6))), Percentage = NA)
for(s in 4:9) {
for(t in 1:length(threshold)) {
count = count +1
a  = c(a,(sum(data_temp[,str_glue("Week", s)] > threshold[t]))/(dim(data_temp)[1]))
}
}
data_plot$Percentage= a
#Plot the data
assign(str_glue(tissue, "_percentage"), ggplot(data_plot, aes(x = Week, y= Percentage, group = Threshold))   + geom_line(aes(colour = Threshold)) +
geom_point(aes(colour = Threshold, shape = Threshold)) + labs(title = tissue) + theme_classic() + ylim(0,1))
}
ff = sapply(tissues, function(x){str_glue(x, "_percentage")})
#grid.arrange(get(ff[1]), get(ff[2]), get(ff[3]), get(ff[4]), get(ff[5]), get(ff[6]), get(ff[7]), get(ff[8]), get(ff[9]), get(ff[10]), get(ff[11]), get(ff[12]), get(ff[13]), get(ff[14]), get(ff[15]))
grid.arrange(get(ff[1]), get(ff[2]), get(ff[3]), get(ff[4]), get(ff[5]), get(ff[6]), get(ff[7]), get(ff[8]), get(ff[9]), get(ff[10]))
load("embryo_df_ann_0.01.RData")
load("diff_genes_ann_0.01.RData")
diff_genes_ann_0.01
load("diff_genes_ann_0.01.RData")
embryo_df_tissues_median  = data.frame(Week4 = apply(diff_genes_ann_0.01[1:3], 1, median), Week5 =  apply(diff_genes_ann_0.01[4:6], 1, median), Week6 =  apply(diff_genes_ann_0.01[7:9], 1, median), Week7=apply(diff_genes_ann_0.01[10:12], 1, median), Week8 =  apply(diff_genes_ann_0.01[13:15], 1, median), Week9 =  apply(diff_genes_ann_0.01[16:18], 1, median))
embryo_df_tissues_median = cbind(embryo_df_tissues_median, embryo_df_tissues[,c(19,32)])
load("diff_genes_ann_0.01.RData")
embryo_df_tissues_median  = data.frame(Week4 = apply(diff_genes_ann_0.01[1:3], 1, median), Week5 =  apply(diff_genes_ann_0.01[4:6], 1, median), Week6 =  apply(diff_genes_ann_0.01[7:9], 1, median), Week7=apply(diff_genes_ann_0.01[10:12], 1, median), Week8 =  apply(diff_genes_ann_0.01[13:15], 1, median), Week9 =  apply(diff_genes_ann_0.01[16:18], 1, median))
embryo_df_tissues_median = cbind(embryo_df_tissues_median, diff_genes_ann_0.01[,c(19,32)])
embryo_df_tissues_median
# List the tissues
tissues = c("Adipose - Subcutaneous", "Adipose - Visceral", "Adipose", "Cells - Transformed fibroblasts", "Skin - Not Sun Exposed", "Skin - Sun Exposed", "Skin", "Muscle - Skeletal", "Bladder", "Kidney - Cortex") #"Kidney - Medulla", "Kidney"
#tissues = c("Colon - Sigmoid", "Colon - Transverse", "Colon", "Esophagus - Gastroesophageal Junction", "Esophagus - Mucosa", "Esophagus - Muscularis", "Esophagus", "Liver", "Minor Salivary Gland", "Pancreas", "Small Intestine - Terminal Ileum", "Spleen", "Stomach")
#tissues = c("Breast - Mammary Tissue", "Cervix - Ectocervix", "Cervix - Endocervix", "Cervix", "Fallopian Tube", "Ovary", "Uterus", "Vagina", "Prostate", "Testis", "Adrenal Gland", "Pituitary", "Thyroid")
#tissues = c("Artery - Aorta", "Artery - Coronary", "Artery - Tibial", "Artery", "Heart - Atrial Appendage", "Heart - Left Ventricle", "Heart", "Lung", "Whole Blood", "Cells - EBV-transformed lymphocytes")
#tissues = c("Brain - Amygdala", "Brain - Anterior cingulate cortex", "Brain - Caudate", "Brain - Cerebellar Hemisphere", "Brain - Cerebellum", "Brain - Cortex", "Brain - Frontal Cortex", "Brain - Hippocampus", "Brain - Hypothalamus", "Brain - Nucleus accumbens", "Brain - Putamen", "Brain - Spinal cord", "Brain - Substantia nigra", "Brain", "Nerve - Tibial")
threshold = c(6.6,6.8, 7.0, 7.2, 7.4, 7.6, 7.8,8.0,8.2, 8.4, 9)
for (tissue in tissues) {
# Select the data from a tissues
bool_contained = sapply(embryo_df_tissues_median$tissues, function(x) {grepl(tissue, toString(x))})
data_temp = embryo_df_tissues_median[bool_contained,]
#Determine the percentage of expressed genes
count = 0
a = c()
data_plot = data.frame(Week = c(sapply(c(4:9), function(x) {rep(x, length(threshold))})), Threshold = factor(c(rep(threshold, 6))), Percentage = NA)
for(s in 4:9) {
for(t in 1:length(threshold)) {
count = count +1
a  = c(a,(sum(data_temp[,str_glue("Week", s)] > threshold[t]))/(dim(data_temp)[1]))
}
}
data_plot$Percentage= a
#Plot the data
assign(str_glue(tissue, "_percentage"), ggplot(data_plot, aes(x = Week, y= Percentage, group = Threshold))   + geom_line(aes(colour = Threshold)) +
geom_point(aes(colour = Threshold, shape = Threshold)) + labs(title = tissue) + theme_classic() + ylim(0,1))
}
ff = sapply(tissues, function(x){str_glue(x, "_percentage")})
#grid.arrange(get(ff[1]), get(ff[2]), get(ff[3]), get(ff[4]), get(ff[5]), get(ff[6]), get(ff[7]), get(ff[8]), get(ff[9]), get(ff[10]), get(ff[11]), get(ff[12]), get(ff[13]), get(ff[14]), get(ff[15]))
grid.arrange(get(ff[1]), get(ff[2]), get(ff[3]), get(ff[4]), get(ff[5]), get(ff[6]), get(ff[7]), get(ff[8]), get(ff[9]), get(ff[10]))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
load("embryo_df_tissues.RData")
library(readxl)
setwd("F:/Data Analysis Project/Github Repo/2022-topic-04-team-01/R Scripts/Paul Experimental")
hprot_data = read_excel("1260419__excel_tabless1-s18.xlsx", sheet = "S1. All genes")
hprot_selected = hprot_data[, c("ensg_id", "elevated tissue(s)")]
colnames(hprot_selected) = c("Gene.stable.ID", "alt.TRA")
library(tidyverse)
setwd("F:/Data Analysis Project/Github Repo/2022-topic-04-team-01/R Scripts")
load("embryo_df_tissues.RData")
hprot_relevant = hprot_selected[hprot_selected$Gene.stable.ID %in% embryo_df_tissues$Gene.stable.ID ,]
embryo_df_tissues_alt = left_join(embryo_df_tissues, hprot_relevant)
embryo_df_tissues_alt = embryo_df_tissues_alt[,c(1:18,20,33)]
embryo_df_tissues_alt = embryo_df_tissues_alt[!is.na(embryo_df_tissues_alt$alt.TRA),]
embryo_df_tissues_alt
embryo_df_tissues_median  = data.frame(Week4 = apply(embryo_df_tissues_alt[1:3], 1, median), Week5 =  apply(embryo_df_tissues_alt[4:6], 1, median), Week6 =  apply(embryo_df_tissues_alt[7:9], 1, median), Week7=apply(embryo_df_tissues_alt[10:12], 1, median), Week8 =  apply(embryo_df_tissues_alt[13:15], 1, median), Week9 =  apply(embryo_df_tissues_alt[16:18], 1, median))
embryo_df_tissues_median = cbind(embryo_df_tissues_median, embryo_df_tissues_alt[,c(19,32)])
embryo_df_tissues_median  = data.frame(Week4 = apply(embryo_df_tissues_alt[1:3], 1, median), Week5 =  apply(embryo_df_tissues_alt[4:6], 1, median), Week6 =  apply(embryo_df_tissues_alt[7:9], 1, median), Week7=apply(embryo_df_tissues_alt[10:12], 1, median), Week8 =  apply(embryo_df_tissues_alt[13:15], 1, median), Week9 =  apply(embryo_df_tissues_alt[16:18], 1, median))
embryo_df_tissues_median = cbind(embryo_df_tissues_median, embryo_df_tissues_alt[,c(19,20)])
embryo_df_tissues_median
# List the tissues
tissues = c("brain", "adrenal gland", "thyroid gland",  "bone marrow", "heart", "skeletal muscle", "smooth muscle", "lung", "adipose tissue", "skin")
#tissues = c("liver", "gallbladder", "salivary gland", "esophagus", "stomach", "pancreas", "kidney", "urinary bladder") # intestine hat nur 5 gene, daher weg
#tissues = c("testis", "prostate", "endometrium", "fallopian tube", "ovary", "placenta")
threshold = c(6.6,6.8, 7.0, 7.2, 7.4, 7.6, 7.8,8.0,8.2, 8.4)
for (tissue in tissues) {
# Select the data from a tissues
bool_contained = sapply(embryo_df_tissues_median$tissues, function(x) {grepl(tissue, toString(x))})
data_temp = embryo_df_tissues_median[bool_contained,]
#Determine the percentage of expressed genes
count = 0
a = c()
data_plot = data.frame(Week = c(sapply(c(4:9), function(x) {rep(x, length(threshold))})), Threshold = factor(c(rep(threshold, 6))), Percentage = NA)
for(s in 4:9) {
for(t in 1:length(threshold)) {
count = count +1
a  = c(a,(sum(data_temp[,str_glue("Week", s)] > threshold[t]))/(dim(data_temp)[1]))
}
}
data_plot$Percentage= a
#Plot the data
assign(str_glue(tissue, "_percentage"), ggplot(data_plot, aes(x = Week, y= Percentage, group = Threshold))   + geom_line(aes(colour = Threshold)) +
geom_point(aes(colour = Threshold, shape = Threshold)) + labs(title = tissue) + theme_classic() + ylim(0,1))
}
# List the tissues
tissues = c("brain", "adrenal gland", "thyroid gland",  "bone marrow", "heart", "skeletal muscle", "smooth muscle", "lung", "adipose tissue", "skin")
#tissues = c("liver", "gallbladder", "salivary gland", "esophagus", "stomach", "pancreas", "kidney", "urinary bladder") # intestine hat nur 5 gene, daher weg
#tissues = c("testis", "prostate", "endometrium", "fallopian tube", "ovary", "placenta")
threshold = c(6.6,6.8, 7.0, 7.2, 7.4, 7.6, 7.8,8.0,8.2, 8.4)
for (tissue in tissues) {
# Select the data from a tissues
bool_contained = sapply(embryo_df_tissues_median$alt.TRA, function(x) {grepl(tissue, toString(x))})
data_temp = embryo_df_tissues_median[bool_contained,]
#Determine the percentage of expressed genes
count = 0
a = c()
data_plot = data.frame(Week = c(sapply(c(4:9), function(x) {rep(x, length(threshold))})), Threshold = factor(c(rep(threshold, 6))), Percentage = NA)
for(s in 4:9) {
for(t in 1:length(threshold)) {
count = count +1
a  = c(a,(sum(data_temp[,str_glue("Week", s)] > threshold[t]))/(dim(data_temp)[1]))
}
}
data_plot$Percentage= a
#Plot the data
assign(str_glue(tissue, "_percentage"), ggplot(data_plot, aes(x = Week, y= Percentage, group = Threshold))   + geom_line(aes(colour = Threshold)) +
geom_point(aes(colour = Threshold, shape = Threshold)) + labs(title = tissue) + theme_classic() + ylim(0,1))
}
ff = sapply(tissues, function(x){str_glue(x, "_percentage")})
#grid.arrange(get(ff[1]), get(ff[2]), get(ff[3]), get(ff[4]), get(ff[5]), get(ff[6]), get(ff[7]), get(ff[8]), get(ff[9]), get(ff[10]), get(ff[11]), get(ff[12]), get(ff[13]), get(ff[14]), get(ff[15]))
grid.arrange(get(ff[1]), get(ff[2]), get(ff[3]), get(ff[4]), get(ff[5]), get(ff[6]), get(ff[7]), get(ff[8]), get(ff[9]), get(ff[10]))
library(limma)
#Differential gene expression: Limma Analysis 2, between weeks
limma_data = as.data.frame(embryo_df_tissues[1:18], rownames = embryo_df_tissues$ensembl.transcript)
weeks = c("week4", "week5", "week6", "week7", "week8", "week9")
f = factor(c("week4", "week4", "week4", "week5", "week5", "week5", "week6", "week6", "week6", "week7", "week7", "week7", "week8", "week8", "week8", "week9", "week9", "week9"), levels =weeks)
design = model.matrix(~0+f)
colnames(design) =  weeks
fit_2 = lmFit(limma_data, design)
contrast_all = makeContrasts(week9-week8, week9-week7, week9-week6, week9-week5, week9-week4, week8-week7,week8-week6, week8-week5, week8-week4, week7-week6, week7-week5, week7-week4, week6-week5, week6-week4, week5-week4, levels = design)
fit_all = contrasts.fit(fit_2, contrast_all)
fit_all = eBayes(fit_all)
results_all = decideTests(fit_all)
summary(results_all)
topTable(fit_all)
topTable(fit_all,1)
topTable(fit_all)
topTable(fit_all,1)
library(limma)
#Differential gene expression: Limma Analysis 2, between weeks
limma_data = as.data.frame(embryo_df_tissues[1:18], rownames = embryo_df_tissues$ensembl.transcript)
weeks = c("week4", "week5", "week6", "week7", "week8", "week9")
f = factor(c("week4", "week4", "week4", "week5", "week5", "week5", "week6", "week6", "week6", "week7", "week7", "week7", "week8", "week8", "week8", "week9", "week9", "week9"), levels =weeks)
design = model.matrix(~0+f)
colnames(design) =  weeks
fit_2 = lmFit(limma_data, design)
contrast_all = makeContrasts(week9-week8, week9-week7, week9-week6, week9-week5, week9-week4, week8-week7,week8-week6, week8-week5, week8-week4, week7-week6, week7-week5, week7-week4, week6-week5, week6-week4, week5-week4, levels = design)
fit_all = contrasts.fit(fit_2, contrast_all)
fit_all = eBayes(fit_all)
results_all = decideTests(fit_all)
topTable(fit_all,1)
topTable(fit_all)
library(limma)
#Differential gene expression: Limma Analysis 2, between weeks
limma_data = as.data.frame(embryo_df_tissues[1:18], rownames = embryo_df_tissues$ensembl.transcript)
weeks = c("week4", "week5", "week6", "week7", "week8", "week9")
f = factor(c("week4", "week4", "week4", "week5", "week5", "week5", "week6", "week6", "week6", "week7", "week7", "week7", "week8", "week8", "week8", "week9", "week9", "week9"), levels =weeks)
design = model.matrix(~0+f)
colnames(design) =  weeks
fit_2 = lmFit(limma_data, design)
contrast_all = makeContrasts(week9-week8,  week8-week7, week7-week6, week6-week5, week5-week4, levels = design)
fit_all = contrasts.fit(fit_2, contrast_all)
fit_all = eBayes(fit_all)
results_all = decideTests(fit_all)
topTable(fit_all)
limma_dat = topTable(fit_all, n = Inf)[, 1:5]
limma_dat
library(limma)
#Differential gene expression: Limma Analysis 2, between weeks
limma_data = as.data.frame(embryo_df_ann_0.01[1:18], rownames = embryo_df_ann_0.01$ensembl.transcript)
library(limma)
setwd("C:/Daten/Data Analysis Projekt/Github Repo/2022-topic-04-team-01/R Scripts")
library(limma)
setwd("C:/Daten/Data Analysis Projekt/Github Repo/2022-topic-04-team-01/R Scripts")
