<<<<<<< Updated upstream
q()
=======
diff_genes_list_0.05 = diff_genes_list_0.05[!duplicated(diff_genes_list_0.05)]
knitr::opts_chunk$set(echo = TRUE)
library(Rcpp)
library(tidyverse)
library(affy)
library(vsn)
library(AnnotationDbi)
library(hgu133plus2hsenstprobe)
library(hgu133plus2hsenstcdf)
library(limma)
library(pheatmap)
library(hexbin)
library(biomaRt)
#setwd("C:/Users/david/Documents/Data Analysis Lokal/2022-topic-04-team-01/R Scripts")
#setwd("F:/Data Analysis Project/Github Repo/2022-topic-04-team-01/R Scripts") #Paul
setwd("C:/Users/merke/Documents/Vorlesungen Material/SS22/GitHub/2022-topic-04-team-01/R Scripts") #Verena
#setwd("C:/Daten/Data Analysis Projekt/Github Repo/2022-topic-04-team-01/R Scripts")
load("embryo_df_tra.RData")
library(tidyverse)
#Make Tissue names more accessible
a = separate(embryo_df_tra, tissues, into = as.character(c(1:30)), sep="/")
create_tissue_vector = function(f) {
f = unlist(f)
f = f[!is.na(f)]
return(f)
}
tissues = apply(a[,31:60],1, create_tissue_vector)
tissues = sapply(tissues, unlist)
a = a[,c(1:30, 61)]
a %>% add_column(tissues = NA)
a$tissues = tissues
embryo_df_tissues = a
save(embryo_df_tissues, file="embryo_df_tissues.RData")
setwd("C:/Users/merke/Documents/Vorlesungen Material/SS22/GitHub/2022-topic-04-team-01/R Scripts")
load("week9-4_diff.RData")
week9_4_diff_tra = embryo_df_tissues[embryo_df_tissues$ensembl.transcript %in% tra_diff$ensembl.transcript, ]
save(week9_4_diff_tra, file="week9_4_diff_tra.RData")
# Ausgabe mit Gennamen f√ºr einen Vergleich
top.table = topTable(fit_all,1, n = Inf)
n = sapply(rownames(top.table), function(x){
embryo_df_tissues$ensembl.transcript[as.numeric(x)]
})
row.names(top.table) = n
top.table[which(top.table$adj.P.Val < 0.01), ]
#Create list of all differentially expresssed genes
diff_genes_list_0.01 = c()
for (i in 1:15) {
top.table = topTable(fit_all,i, n = Inf)
n = sapply(rownames(top.table), function(x){
embryo_df_tissues$ensembl.transcript[as.numeric(x)]
})
row.names(top.table) = n
diff_genes_list_0.01 = c(diff_genes_list_0.01, rownames(top.table[which(top.table$adj.P.Val < 0.01), ]))
}
#Select differential genes from annotated dataframe
diff_genes_ann_0.01 = embryo_df_tissues[embryo_df_tissues$ensembl.transcript %in% diff_genes_list_0.01, ]
save(diff_genes_ann_0.01, file = "diff_genes_ann_0.01.RData")
#pca ueber spalten (wochen)
pca_wochen <- prcomp(diff_genes_ann_0.01[,1:18],center=TRUE, scale.=TRUE)
summary(pca_wochen)
pca_wochen_df <- data.frame(pca_wochen$x[, 1:2])
library(devtools)
install_github("vqv/ggbiplot")
library(ggbiplot)
library(psych)
#plotting pca_wochen
ggbiplot(pca_wochen, groups = diff_genes_ann_0.01$max.tissue) #groese anpassen damit plot sichtbar
ggbiplot(pca_wochen, labels=colnames(diff_genes_ann_0.01)[1:18])
ggbiplot(pca_wochen, choices=c(2,3))
ggbiplot(pca_wochen, choices=c(3,4))
#ggbiplot(pca_wochen,labels=diff_genes_ann_0.01['max.tissue']) #nicht lesbar
#ggbiplot(pca_wochen,groups=c(diff_genes_ann_0.01['max.tissue']))
#ggplot
pca_wochen_plot <- ggplot(
pca_wochen_df,
aes(
x = PC1,
y = PC2,
#color=c(diff_genes_ann_0.01['max.tissue'])
)
) +
geom_point() + # Plot individual points to make a scatterplot
theme_classic() # Format as a classic-looking plot with no gridlines
# Print out the plot here
pca_wochen_plot
pairs.panels(pca_wochen$x,
gap=0,
bg = c("red", "yellow", "blue"),
pch=21)
#pca ueber zeilen (genes)
pca_genes <- prcomp(
t(diff_genes_ann_0.01[,1:18]), # transpose our data frame to obtain PC scores for samples, not genes
scale. = TRUE # we want the data scaled to have unit variance for each gene
)
summary(pca_genes)
pca_genes_df <- data.frame(pca_genes$x[, 1:2])
#plotting pca_genes
ggbiplot(pca_genes)
ggbiplot(pca_genes, choices=c(2,3))
ggbiplot(pca_genes, choices=c(3,4))
#ggplot
pca_genes_plot <- ggplot(
pca_genes_df,
aes(
x = PC1,
y = PC2,
)
) +
geom_point() + # Plot individual points to make a scatterplot
theme_classic() # Format as a classic-looking plot with no gridlines
# Print out the plot here
pca_genes_plot
#plotting pca_genes
ggbiplot(pca_genes)
ggbiplot(pca_genes, choices=c(2,3))
ggbiplot(pca_genes, choices=c(3,4))
#ggplot
pca_genes_plot <- ggplot(
pca_genes_df,
aes(
x = PC1,
y = PC2,
)
) +
geom_point() + # Plot individual points to make a scatterplot
theme_classic() # Format as a classic-looking plot with no gridlines
# Print out the plot here
pca_genes_plot
#pca ueber zeilen (genes)
pca_genes <- prcomp(
t(diff_genes_ann_0.01[,1:18]), # transpose our data frame to obtain PC scores for genes, not weeks
scale. = TRUE
)# we want the data scaled to have unit variance
summary(pca_genes)
pca_genes_df <- data.frame(pca_genes$x[, 1:2])
#pca ueber zeilen (genes)
pca_genes <- prcomp(
t(diff_genes_ann_0.01[,1:18]), # transpose our data frame to obtain PC scores for genes, not weeks
scale. = TRUE
)# we want the data scaled to have unit variance
summary(pca_genes)
pca_genes_df <- data.frame(pca_genes$x[, 1:2])
#plotting pca_genes
ggbiplot(pca_genes)
ggbiplot(pca_genes, choices=c(2,3))
ggbiplot(pca_genes, choices=c(3,4))
#ggplot
pca_genes_plot <- ggplot(
pca_genes_df,
aes(
x = PC1,
y = PC2,
)
) +
geom_point() + # Plot individual points to make a scatterplot
theme_classic() # Format as a classic-looking plot with no gridlines
# Print out the plot here
pca_genes_plot
ggbiplot(pca_wochen, groups = diff_genes_ann_0.01$max.tissue)
ggbiplot(pca_genes, groups = diff_genes_ann_0.01$max.tissue)
head(diff_genes_ann_0.01)
dim(diff_genes_ann_0.01)
knitr::opts_chunk$set(echo = TRUE)
library(Rcpp)
library(tidyverse)
library(affy)
library(vsn)
library(AnnotationDbi)
library(hgu133plus2hsenstprobe)
library(hgu133plus2hsenstcdf)
library(limma)
library(pheatmap)
library(hexbin)
library(biomaRt)
#setwd("C:/Users/david/Documents/Data Analysis Lokal/2022-topic-04-team-01/R Scripts")
#setwd("F:/Data Analysis Project/Github Repo/2022-topic-04-team-01/R Scripts") #Paul
setwd("C:/Users/merke/Documents/Vorlesungen Material/SS22/GitHub/2022-topic-04-team-01/R Scripts") #Verena
#setwd("C:/Daten/Data Analysis Projekt/Github Repo/2022-topic-04-team-01/R Scripts")
load("embryo_df_tra.RData")
library(tidyverse)
#Make Tissue names more accessible
a = separate(embryo_df_tra, tissues, into = as.character(c(1:30)), sep="/")
create_tissue_vector = function(f) {
f = unlist(f)
f = f[!is.na(f)]
return(f)
}
tissues = apply(a[,31:60],1, create_tissue_vector)
tissues = sapply(tissues, unlist)
a = a[,c(1:30, 61)]
a %>% add_column(tissues = NA)
a$tissues = tissues
embryo_df_tissues = a
save(embryo_df_tissues, file="embryo_df_tissues.RData")
setwd("C:/Users/merke/Documents/Vorlesungen Material/SS22/GitHub/2022-topic-04-team-01/R Scripts")
load("week9-4_diff.RData")
week9_4_diff_tra = embryo_df_tissues[embryo_df_tissues$ensembl.transcript %in% tra_diff$ensembl.transcript, ]
save(week9_4_diff_tra, file="week9_4_diff_tra.RData")
library(limma)
#Differential gene expression: Limma Analysis 2, between weeks
limma_data = as.data.frame(embryo_df_tissues[1:18], rownames = embryo_df_tissues$ensembl.transcript)
weeks = c("week4", "week5", "week6", "week7", "week8", "week9")
f = factor(c("week4", "week4", "week4", "week5", "week5", "week5", "week6", "week6", "week6", "week7", "week7", "week7", "week8", "week8", "week8", "week9", "week9", "week9"), levels =weeks)
design = model.matrix(~0+f)
colnames(design) =  weeks
fit_2 = lmFit(limma_data, design)
contrast_all = makeContrasts(week9-week8, week9-week7, week9-week6, week9-week5, week9-week4, week8-week7,week8-week6, week8-week5, week8-week4, week7-week6, week7-week5, week7-week4, week6-week5, week6-week4, week5-week4, levels = design)
fit_all = contrasts.fit(fit_2, contrast_all)
fit_all = eBayes(fit_all)
results_all = decideTests(fit_all)
summary(results_all)
#Create list of all differentially expresssed genes
diff_genes_list_0.01 = c()
for (i in 1:15) {
top.table = topTable(fit_all,i, n = Inf)
n = sapply(rownames(top.table), function(x){
embryo_df_tissues$ensembl.transcript[as.numeric(x)]
})
row.names(top.table) = n
diff_genes_list_0.01 = c(diff_genes_list_0.01, rownames(top.table[which(top.table$adj.P.Val < 0.01), ]))
}
length(diff_genes_list_0.01) #4538
diff_genes_list_0.01 = diff_genes_list_0.01[!duplicated(diff_genes_list_0.01)]
length(diff_genes_list_0.01) #1818
#List with 5%
diff_genes_list_0.05 = c()
for (i in 1:15) {
top.table = topTable(fit_all,i, n = Inf)
n = sapply(rownames(top.table), function(x){
embryo_df_tissues$ensembl.transcript[as.numeric(x)]
})
row.names(top.table) = n
diff_genes_list_0.05 = c(diff_genes_list_0.05, rownames(top.table[which(top.table$adj.P.Val < 0.05), ]))
}
diff_genes_list_0.05 = diff_genes_list_0.05[!duplicated(diff_genes_list_0.05)]
#Select differential genes from annotated dataframe
diff_genes_ann_0.01 = embryo_df_tissues[embryo_df_tissues$ensembl.transcript %in% diff_genes_list_0.01, ]
save(diff_genes_ann_0.01, file = "diff_genes_ann_0.01.RData")
#pca ueber spalten (wochen)
pca_wochen <- prcomp(diff_genes_ann_0.01[,1:18],center=TRUE, scale.=TRUE)
summary(pca_wochen)
pca_wochen_df <- data.frame(pca_wochen$x[, 1:2])
library(devtools)
install_github("vqv/ggbiplot")
library(ggbiplot)
library(psych)
#plotting pca_wochen
ggbiplot(pca_wochen, groups = diff_genes_ann_0.01$max.tissue) #groese anpassen damit plot sichtbar
ggbiplot(pca_wochen, labels=colnames(diff_genes_ann_0.01)[1:18])
ggbiplot(pca_wochen, choices=c(2,3))
ggbiplot(pca_wochen, choices=c(3,4))
#ggbiplot(pca_wochen,labels=diff_genes_ann_0.01['max.tissue']) #nicht lesbar
#ggbiplot(pca_wochen,groups=c(diff_genes_ann_0.01['max.tissue']))
#ggplot
pca_wochen_plot <- ggplot(
pca_wochen_df,
aes(
x = PC1,
y = PC2,
#color=c(diff_genes_ann_0.01['max.tissue'])
)
) +
geom_point() + # Plot individual points to make a scatterplot
theme_classic() # Format as a classic-looking plot with no gridlines
# Print out the plot here
pca_wochen_plot
pairs.panels(pca_wochen[,1:2],
gap=0,
bg = c("red", "yellow", "blue"),
pch=21)
pairs.panels(pca_wochen[,],
gap=0,
bg = c("red", "yellow", "blue"),
pch=21)
pairs.panels(pca_wochen[],
gap=0,
bg = c("red", "yellow", "blue"),
pch=21)
pairs.panels(pca_wochen[1,1],
gap=0,
bg = c("red", "yellow", "blue"),
pch=21)
pairs.panels(pca_wochen[2,2],
gap=0,
bg = c("red", "yellow", "blue"),
pch=21)
pairs.panels(pca_wochen$x,
gap=0,
bg = c("red", "yellow", "blue"),
pch=21)
airs.panels(pca_wochen_df$x,
gap=0,
bg = c("red", "yellow", "blue"),
pch=21)
pairs.panels(pca_wochen_df$x,
gap=0,
bg = c("red", "yellow", "blue"),
pch=21)
#pca ueber zeilen (genes)
t_diff_genes_ann_0.01 <- t(diff_genes_ann_0.01)
summary(t_diff_genes_ann_0.01)
# pca_genes <- prcomp( t(diff_genes_ann_0.01[,1:18]), scale. = TRUE )
#summary(pca_genes)
#pca_genes_df <- data.frame(pca_genes$x[, 1:2])
#pca ueber zeilen (genes)
t_diff_genes_ann_0.01 <- t(diff_genes_ann_0.01)
head(t_diff_genes_ann_0.01)
# pca_genes <- prcomp( t(diff_genes_ann_0.01[,1:18]), scale. = TRUE )
#summary(pca_genes)
#pca_genes_df <- data.frame(pca_genes$x[, 1:2])
#pca ueber zeilen (genes)
t_diff_genes_ann_0.01 <- t(diff_genes_ann_0.01)
head(diff_genes_ann_0.01)
#head(t_diff_genes_ann_0.01)
# pca_genes <- prcomp( t(diff_genes_ann_0.01[,1:18]), scale. = TRUE )
#summary(pca_genes)
#pca_genes_df <- data.frame(pca_genes$x[, 1:2])
dim(t_diff_genes_ann_0.01)
dim(diff_genes_ann_0.01)
pca_genes <- prcomp( t_diff_genes_ann_0.01[1:18,]), scale. = TRUE )
pca_genes <- prcomp( t_diff_genes_ann_0.01[1:18,]) scale. = TRUE )
#pca ueber zeilen (genes)
t_diff_genes_ann_0.01 <- t(diff_genes_ann_0.01)
dim(diff_genes_ann_0.01)
dim(t_diff_genes_ann_0.01)
#pca_genes <- prcomp( t_diff_genes_ann_0.01[1:18,], scale. = TRUE )
pca_wochen <- prcomp(t_diff_genes_ann_0.01[1:18,],center=TRUE, scale.=TRUE)
pca_genes <- prcomp( t_diff_genes_ann_0.01[1:18,], scale. = TRUE )
#pca ueber zeilen (genes)
pca_genes <- prcomp(
t(diff_genes_ann_0.01[,1:18]), # transpose our data frame to obtain PC scores for genes, not weeks
scale. = TRUE # we want the data scaled to have unit variance
)
summary(pca_genes)
pca_genes_df <- data.frame(pca_genes$x[, 1:2])
pca_genes
pca_wochen
pca_genes
#pca ueber zeilen (genes)
pca_genes <- prcomp(
t(diff_genes_ann_0.01[,1:18]), # transpose our data frame to obtain PC scores for genes, not weeks
scale. = TRUE # we want the data scaled to have unit variance
)
summary(pca_genes)
#pca_genes
pca_genes_df <- data.frame(pca_genes$x[, 1:2])
#plotting pca_genes
ggbiplot(pca_genes, groups = diff_genes_ann_0.01$max.tissue)
#plotting pca_genes
ggbiplot(pca_genes)
ggbiplot(pca_genes, choices=c(2,3))
ggbiplot(pca_genes, choices=c(3,4))
#ggplot
pca_genes_plot <- ggplot(
pca_genes_df,
aes(
x = PC1,
y = PC2,
)
) +
geom_point() + # Plot individual points to make a scatterplot
theme_classic() # Format as a classic-looking plot with no gridlines
# Print out the plot here
pca_genes_plot
#plotting pca_genes
ggbiplot(pca_genes, abels=colnames(diff_genes_ann_0.01)[1:18])
#plotting pca_genes
ggbiplot(pca_genes, labels=colnames(diff_genes_ann_0.01)[1:18])
#plotting pca_genes
ggbiplot(pca_genes)
#plotting pca_wochen
ggbiplot(pca_wochen, groups = diff_genes_ann_0.01$max.tissue) #groese anpassen damit plot sichtbar
ggbiplot(pca_wochen)
ggbiplot(pca_wochen, choices=c(2,3))
ggbiplot(pca_wochen, choices=c(3,4))
#ggbiplot(pca_wochen,labels=diff_genes_ann_0.01['max.tissue']) #nicht lesbar
#ggbiplot(pca_wochen,groups=c(diff_genes_ann_0.01['max.tissue']))
#ggplot
pca_wochen_plot <- ggplot(
pca_wochen_df,
aes(
x = PC1,
y = PC2,
#color=c(diff_genes_ann_0.01['max.tissue'])
)
) +
geom_point() + # Plot individual points to make a scatterplot
theme_classic() # Format as a classic-looking plot with no gridlines
# Print out the plot here
pca_wochen_plot
#plotting pca_genes
ggbiplot(pca_genes)
ggbiplot(pca_genes, choices=c(2,3))
ggbiplot(pca_genes, choices=c(3,4))
#ggplot
pca_genes_plot <- ggplot(
pca_genes_df,
aes(
x = PC1,
y = PC2,
)
) +
geom_point() + # Plot individual points to make a scatterplot
theme_classic() # Format as a classic-looking plot with no gridlines
# Print out the plot here
pca_genes_plot
#plotting pca_genes
ggbiplot(pca_genes, abels=colnames(diff_genes_ann_0.01)[1:18])
#plotting pca_genes
ggbiplot(pca_genes, labels=colnames(diff_genes_ann_0.01)[1:18])
#plotting pca_genes
ggbiplot(pca_genes, labels=colnames(diff_genes_ann_0.01)[1:18])
ggbiplot(pca_genes, choices=c(2,3))
ggbiplot(pca_genes, choices=c(3,4))
#ggplot
pca_genes_plot <- ggplot(
pca_genes_df,
aes(
x = PC1,
y = PC2,
)
) +
geom_point() + # Plot individual points to make a scatterplot
theme_classic() # Format as a classic-looking plot with no gridlines
# Print out the plot here
pca_genes_plot
ggbiplot(pca_genes, groups = diff_genes_ann_0.01$max.tissue)
dim(pca_genes)
pca_genes
pca_genes[,20:30]
pca_genes[,20]
pca_genes[,2]
pca_genes[,]
pca_genes$P12
pca_genes$P 12
pca_genes$PCA12
pca_genes
pca_weeks
pca_wochen
pca_genes
fancy <- pairs.panels(pca_wochen$x,
gap=0,
bg = c("red", "yellow", "blue"),
pch=21)
fancy <- pairs.panels(pca_wochen$x,
gap=0,
bg = c("red", "yellow", "blue"),
pch=21)
fancy
fancy <- pairs.panels(pca_wochen$x,
gap=0,
bg = c("red", "yellow", "blue"),
pch=21)
fancy
fancy <- pairs.panels(pca_wochen$x,
gap=0,
bg = c("red", "yellow", "blue"),
pch=21)
fancy
pairs.panels(pca_wochen$x,
gap=0,
bg = c("red", "yellow", "blue"),
pch=21)
pairs.panels(pca_wochen$x,
gap=0,
bg = c("red", "yellow", "blue"),
pch=21)
pairs.panels(pca_genes$x,
gap=0,
bg = c("red", "yellow", "blue"),
pch=21)
pairs.panels(pca_genes$x,
gap=0,
bg = c("red", "yellow", "blue"),
pch=21)
pairs.panels(pca_genes$x,
gap=0,
bg = c("red", "yellow", "blue"),
pch=21)
pairs.panels(pca_genes$x,
gap=0,
bg = c("red", "yellow", "blue"),
pch=21)
pairs.panels(pca_genes$x,
gap=0,
bg = c("red", "yellow", "blue"),
pch=21)
pairs.panels(pca_wochen$x,
gap=0,
bg = c("red", "yellow", "blue"),
pch=21)
pairs.panels(pca_wochen$x,
gap=0,
bg = c("red", "yellow", "blue"),
pch=21)
pairs.panels(pca_wochen$x,
gap=0,
bg = c("red", "yellow", "blue"),
pch=21)
```{r}
pairs.panels(pca_wochen$x,
gap=0,
bg = c("red", "yellow", "blue"),
pch=21)
pairs.panels(pca_wochen$x,
gap=0,
bg = c("red", "yellow", "blue"),
pch=21)
pairs.panels(pca_wochen$x,
gap=0,
bg = c("red", "yellow", "blue"),
pch=21)
>>>>>>> Stashed changes
