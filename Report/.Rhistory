ggplot(aes(x = PC)) +
geom_col(aes(y = pct)) +
geom_line(aes(y = pct_cum, group = 1)) +
geom_point(aes(y = pct_cum)) +
labs(x = "Principal component", y = "Fraction variance explained")
#varianz von pca erklärt
pc_eigenvalues <- pca_genes$sdev^2
pc_eigenvalues <- tibble(PC = factor(1:length(pc_eigenvalues)),
variance = pc_eigenvalues) %>%
# add a new column with the percent variance
mutate(pct = variance/sum(variance)*100) %>%
# add another column with the cumulative variance explained
mutate(pct_cum = cumsum(pct))
pc_eigenvalues %>%
ggplot(aes(x = PC)) +
geom_col(aes(y = pct)) +
geom_line(aes(y = pct_cum, group = 1)) +
geom_point(aes(y = pct_cum)) +
labs(x = "Principal component", y = "Fraction variance explained")
#varianz von pca erklärt
pc_eigenvalues <- pca_genes$sdev^2
pc_eigenvalues <- tibble(PC = factor(1:length(pc_eigenvalues)),
variance = pc_eigenvalues) %>%
# add a new column with the percent variance
mutate(pct = variance/sum(variance)*100) %>%
# add another column with the cumulative variance explained
mutate(pct_cum = cumsum(pct))
pc_eigenvalues %>%
ggplot(aes(x = PC)) +
geom_col(aes(y = pct)) +
geom_line(aes(y = pct_cum, group = 1)) +
#geom_point(aes(y = pct_cum)) +
labs(x = "Principal component", y = "Fraction variance explained")
#varianz von pca erklärt
pc_eigenvalues <- pca_genes$sdev^2
pc_eigenvalues <- tibble(PC = factor(1:length(pc_eigenvalues)),
variance = pc_eigenvalues) %>%
# add a new column with the percent variance
mutate(pct = variance/sum(variance)*100) %>%
# add another column with the cumulative variance explained
mutate(pct_cum = cumsum(pct))
pc_eigenvalues %>%
ggplot(aes(x = PC)) +
geom_col(aes(y = pct)) +
geom_line(aes(y = pct_cum, group = 1)) +
geom_point(aes(y = pct_cum)) +
labs(x = "Principal component", y = "Fraction variance explained")
#varianz von pca erklärt
pc_eigenvalues <- pca_genes$sdev^2
pc_eigenvalues <- tibble(PC = factor(1:length(pc_eigenvalues)),
variance = pc_eigenvalues) %>%
# add a new column with the percent variance
mutate(pct = variance/sum(variance)*100) %>%
# add another column with the cumulative variance explained
mutate(pct_cum = cumsum(pct))
pc_eigenvalues %>%
ggplot(aes(x = PC)) +
geom_col(aes(y = pct)) +
#geom_line(aes(y = pct_cum, group = 1)) +
geom_point(aes(y = pct_cum)) +
labs(x = "Principal component", y = "Fraction variance explained")
#varianz von pca erklärt
pc_eigenvalues <- pca_genes$sdev^2
pc_eigenvalues <- tibble(PC = factor(1:length(pc_eigenvalues)),
variance = pc_eigenvalues) %>%
# add a new column with the percent variance
mutate(pct = variance/sum(variance)*100) %>%
# add another column with the cumulative variance explained
mutate(pct_cum = cumsum(pct))
pc_eigenvalues %>%
ggplot(aes(x = PC)) +
#geom_col(aes(y = pct)) +
geom_line(aes(y = pct_cum, group = 1)) +
geom_point(aes(y = pct_cum)) +
labs(x = "Principal component", y = "Fraction variance explained")
#varianz von pca erklärt
pc_eigenvalues <- pca_genes$sdev^2
pc_eigenvalues <- tibble(PC = factor(1:length(pc_eigenvalues)),
variance = pc_eigenvalues) %>%
# add a new column with the percent variance
mutate(pct = variance/sum(variance)*100) %>%
# add another column with the cumulative variance explained
mutate(pct_cum = cumsum(pct))
pc_eigenvalues %>%
ggplot(aes(x = PC)) +
geom_col(aes(y = pct)) +
geom_line(aes(y = pct_cum, group = 1)) +
geom_point(aes(y = pct_cum)) +
labs(x = "Principal component", y = "Fraction variance explained")
var_explained = pca_genes$sdev^2 / sum(pca_genes$sdev^2)
qplot(c(1:4), var_explained) +
geom_line() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0, 1)
var_explained = pca_genes$sdev^2 / sum(pca_genes$sdev^2)
qplot(c(1:18), var_explained) +
geom_line() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0, 1)
all_libraries <- tibble::tribble(
~Library...package,                        ~Version,                              ~Description,
"affy",                              NA, "library used for unpacking the raw data",
"vsn",                              NA,   "library for the vsn rma normalization",
"AnnotationDbi",                              NA,                                        NA,
"tidyverse", "library used for Datacleaning",                       "Library / package",
"Version",                   "Description",                                    "affy"
)
all_libraries %>%
kable(all_libraries, digits = 3, row.names = FALSE, align = "c", caption = "Table 1: summary of all libraries used") %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
#plotting pca_genes
ggbiplot(pca_genes, labels=colnames(diff_genes_ann_0.01)[1:18])
library(devtools)
library(devtools)
#library(devtools)
install_github("vqv/ggbiplot")
#library(devtools)
#install_github("vqv/ggbiplot")
library(ggbiplot)
library(psych)
#plotting pca_genes
ggbiplot(pca_genes, labels=colnames(diff_genes_ann_0.01)[1:18])
ggbiplot(pca_genes, choices=c(2,3))
ggbiplot(pca_genes, choices=c(3,4))
#ggplot
pca_genes_plot <- ggplot(
pca_genes_df,
aes(
x = PC1,
y = PC2,
)
) +
geom_point() + # Plot individual points to make a scatterplot
theme_classic() # Format as a classic-looking plot with no gridlines
# Print out the plot here
pca_genes_plot
head(diff_genes_ann_0.01)
dim(diff_genes_ann_0.01)
install.packages("devtools", repo="http://cran.us.r-project.org")
library(devtools)
install.packages("devtools")
install.packages("devtools", repo="http://cran.us.r-project.org")
library(devtools)
#plotting pca_genes
ggbiplot(pca_genes, groups=max.tissue, labels=colnames(diff_genes_ann_0.01)[1:18])
ggbiplot(pca_genes, groups='max.tissue', labels=colnames(diff_genes_ann_0.01)[1:18])
ggbiplot(pca_genes, choices=c(2,3))
ggbiplot(pca_genes, choices=c(3,4))
ggbiplot(pca_genes, groups=diff_genes_ann_0.01$max.tissue, labels=colnames(diff_genes_ann_0.01)[1:18])
#plotting pca_genes
ggbiplot(pca_genes, labels=colnames(diff_genes_ann_0.01)[1:18])
ggbiplot(pca_genes, choices=c(2,3))
ggbiplot(pca_genes, choices=c(3,4))
#ggplot
pca_genes_plot <- ggplot(
pca_genes_df,
aes(
x = PC1,
y = PC2,
)
) +
geom_point() + # Plot individual points to make a scatterplot
theme_classic() # Format as a classic-looking plot with no gridlines
# Print out the plot here
pca_genes_plot
The simplest and most handsome example
wine.pca <- prcomp(diff_genes_ann_0.01, scale. = TRUE)
wine.pca <- prcomp(diff_genes_ann_0.01, scale. = TRUE)
wine.pca <- prcomp(t(diff_genes_ann_0.01[,1:18]), scale. = TRUE)
# Demo Style
ggbiplot(wine.pca, obs.scale = 1, var.scale = 1,
groups = wine.class, ellipse = TRUE, circle = TRUE) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal', legend.position = 'top')
wine.pca <- prcomp(t(diff_genes_ann_0.01[,1:18]), scale. = TRUE)
# Demo Style
ggbiplot(wine.pca, obs.scale = 1, var.scale = 1,
ellipse = TRUE, circle = TRUE) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal', legend.position = 'top')
# basic style
plot(wine.pca$x) # The original picture, you can try to draw, can not bear to look directly at
#plotting pca_genes
ggbiplot(pca_genes,)
text(diff_genes_ann_0.01$max.tissue),
ggbiplot(pca_genes,)
text(diff_genes_ann_0.01$max.tissue)
#plotting pca_genes
ggbiplot(pca_genes)
ggbiplot(pca_genes, choices=c(2,3))
ggbiplot(pca_genes, choices=c(1,3))
githubURL <- "https://github.com/datascience-mobi-2022/2022-topic-04-team-01/blob/main/Report/data.GSE15744.RData"
load_github_data(githubURL)
library(affy)
library(AnnotationDbi)
library(hgu133plus2hsenstprobe)
library(hgu133plus2hsenstcdf)
library(Rcpp)
library(tidyverse)
library(vsn)
library(limma)
library(pheatmap)
library(hexbin)
library(biomaRt)
library(kableExtra)
library(Rfssa)
library(ggbiplot)
library(magrittr)
library(dplyr)
library(stringr)
library(ggrepel)
#make data accessible for everyone
githubURL <- "https://github.com/datascience-mobi-2022/2022-topic-04-team-01/blob/main/Report/data.GSE15744.RData"
load_github_data(githubURL)
#make data accessible for everyone
githubURL <- "https://github.com/datascience-mobi-2022/2022-topic-04-team-01/blob/main/Report/data.GSE15744.RData"
load_github_data(githubURL)
library(grid)
library(gridExtra)
library(cowplot)
?arrangeGrob()
?gtable
image.GSM394525 <- image(data.GSE15744[,16], col=rainbow(100, start = 0, end = 0.75)[100:1])
image.GSM394527 <- image(data.GSE15744[,17], col=rainbow(100, start = 0, end = 0.75)[100:1])
surfaceimage.plot = arrangeGrob(grobs = list(image.GSM394525, image.GSM394527), nrow=1, widths = c(3,3), heights = c(1))
surfaceimage.plot_output = as_ggplot(surfaceimage.plot) + draw_plot_label(label = c("A", "B"), size = 15, x = c(0.03, 0.35, 0.63), y = c(0.13, 0.13, 0.13))
install.packages(ggpubr)
install.packages("ggpubr")
surfaceimage.plot = arrangeGrob(grobs = list(image.GSM394525, image.GSM394527), nrow=1, widths = c(3,3), heights = c(1))
surfaceimage.plot_output = as_ggplot(surfaceimage.plot) + draw_plot_label(label = c("A", "B"), size = 15, x = c(0.03, 0.35, 0.63), y = c(0.13, 0.13, 0.13))
library(ggpubr)
surfaceimage.plot = arrangeGrob(grobs = list(image.GSM394525, image.GSM394527), nrow=1, widths = c(3,3), heights = c(1))
surfaceimage.plot_output = as_ggplot(surfaceimage.plot) + draw_plot_label(label = c("A", "B"), size = 15, x = c(0.03, 0.35, 0.63), y = c(0.13, 0.13, 0.13))
surfaceimage.plot = arrangeGrob(grobs = list(image.GSM394525, image.GSM394527), nrow=1, widths = c(3,3), heights = c(1))
surfaceimage.plot_output = as_ggplot(surfaceimage.plot) + draw_plot_label(label = c("A", "B"), size = 15, x = c(0.03, 0.35), y = c(0.13, 0.13))
annotate_figure(surfaceimage.plot_output, top = text_grob("Surface images of two selected microarrays", color = "black", face = "bold", size = 16))
library("grid")
library("ggplotify")
install.packages('ggplotify')
library("ggplotify")
image.GSM394527 <- as.grob(image.GSM394527)
str(image.GSM394527)
image.GSM394527 <- image(data.GSE15744[,17], col=rainbow(100, start = 0, end = 0.75)[100:1])
str(image.GSM394527)
image.GSM394527 <- as_ggplot(image.GSM394527)
str(image.GSM394527)
image.GSM394525 <- as_ggplot(image.GSM394525)
surfaceimage.plot = arrangeGrob(grobs = list(image.GSM394525, image.GSM394527), nrow=1, widths = c(3,3), heights = c(1))
surfaceimage.plot_output = as_ggplot(surfaceimage.plot) + draw_plot_label(label = c("A", "B"), size = 15, x = c(0.03, 0.35), y = c(0.13, 0.13))
annotate_figure(surfaceimage.plot_output, top = text_grob("Surface images of two selected microarrays", color = "black", face = "bold", size = 16))
image.GSM394525
image(data.GSE15744[,16], col=rainbow(100, start = 0, end = 0.75)[100:1])
as_ggplot(image(data.GSE15744[,16], col=rainbow(100, start = 0, end = 0.75)[100:1]))
image.GSM394525 <- as_ggplot(image(data.GSE15744[,16], col=rainbow(100, start = 0, end = 0.75)[100:1]))
str(image.GSM394525)
image.GSM394525 <- as_ggplot(image(data.GSE15744[,16], col=rainbow(100, start = 0, end = 0.75)[100:1]))
image.GSM394527 <- as_ggplot(image(data.GSE15744[,17], col=rainbow(100, start = 0, end = 0.75)[100:1]))
surfaceimage.plot = arrangeGrob(grobs = list(image.GSM394525, image.GSM394527), nrow=1, widths = c(3,3), heights = c(1))
surfaceimage.plot_output = as_ggplot(surfaceimage.plot) + draw_plot_label(label = c("A", "B"), size = 15, x = c(0.03, 0.35), y = c(0.13, 0.13))
annotate_figure(surfaceimage.plot_output, top = text_grob("Surface images of two selected microarrays", color = "black", face = "bold", size = 16))
image.GSM394525
image.GSM394527 <- image(data.GSE15744[,17], col=rainbow(100, start = 0, end = 0.75)[100:1])
annotate_figure(image.GSM394527, top = text_grob("Surface image of selected microarray", color = "black", face = "bold", size = 16))
is.null(image.GSM394527)
```{r QC-surface-images, fig.width= 3, fig.height= 3, fig.cap= ""}
image.GSM394527 <- image(data.GSE15744[,17], col=rainbow(100, start = 0, end = 0.75)[100:1])
image.GSM394527 <- image(data.GSE15744[,17], col=rainbow(100, start = 0, end = 0.75)[100:1])
## To generate all images please use:
#for (i in 1:18) {
#  image(data.GSE15744[,i], col=rainbow(100, start = 0, end = 0.75)[100:1])
#} # GSM394501 looks a bit brighter, GSM394527 looks very bright
data.rnadegradation <- AffyRNAdeg(data.GSE15744)
plotAffyRNAdeg(data.rnadegradation, col=rainbow(18))
title(sub="RNA Degradation of 18 microarrays, GSE15744")
## Not scaled
#plotAffyRNAdeg(data.rnadegradation, col=rainbow(18), transform = "shift.only")
#title(sub="Human embryo (GSE15744, Raw data)")
```{r RNA-Degradation-Plot, fig.width= 7, fig.height= 4, fig.cap= "**Quality control: RNA degradation plot shows no irregularities and verifies the data.** No crossing lines can be seen which results in comparible data."}
data.rnadegradation <- AffyRNAdeg(data.GSE15744)
plotAffyRNAdeg(data.rnadegradation, col=rainbow(18))
title(sub="RNA Degradation of 18 microarrays, GSE15744")
## Not scaled
#plotAffyRNAdeg(data.rnadegradation, col=rainbow(18), transform = "shift.only")
#title(sub="Human embryo (GSE15744, Raw data)")
data.rnadegradation <- AffyRNAdeg(data.GSE15744)
plotAffyRNAdeg(data.rnadegradation, col=rainbow(18))
title(sub="RNA Degradation of 18 microarrays, GSE15744")
## Not scaled
#plotAffyRNAdeg(data.rnadegradation, col=rainbow(18), transform = "shift.only")
#title(sub="Human embryo (GSE15744, Raw data)")
surfaceimage.GSM394525 <- image(data.GSE15744[,13], col=rainbow(100, start = 0, end = 0.75)[100:1])
meanSdPlot(data.GSE15744.vsnrma, xlab="Rank (mean)", ylab="Standard Deviation")
library(vsn)
meanSdPlot(data.GSE15744.vsnrma, xlab="Rank (mean)", ylab="Standard Deviation")
data.GSE15744.vsnrma <- vsnrma(data.GSE15744)
meanSdPlot(data.GSE15744.vsnrma, xlab="Rank (mean)", ylab="Standard Deviation")
meansdplot.GSE15744.vsnrma <- meanSdPlot(data.GSE15744.vsnrma, xlab="Rank (mean)", ylab="Standard Deviation")
str(meansdplot.GSE15744.vsnrma)
meansdplot.GSE15744.vsnrma
?meanSdPlot
meansdplot.GSE15744.vsnrma + ggtitle("Mean-Sd-Plot of vsn normalized data")
meansdplot.GSE15744.vsnrma$gg + ggtitle("Mean-Sd-Plot of vsn normalized data")
meansd.GSE15744.vsnrma <- meanSdPlot(data.GSE15744.vsnrma, xlab="Rank (mean)", ylab="Standard Deviation")
boxplot(exprs(data.GSE15744.vsnrma), col = rainbow(15),
cex.axis=0.5,
las=2,
ylab="Relative expression",
main="Raw Gene expression in human embryo (GSE15744, normalized)")
boxplot(exprs(data.GSE15744.vsnrma), col = rainbow(15),
cex.axis=0.5,
las=2,
xlab="Microarrays week 4-9 with three replica each"
ylab="Relative expression",
boxplot(exprs(data.GSE15744.vsnrma), col = rainbow(15),
cex.axis=0.5,
las=2,
xlab="Microarrays week 4-9 with three replica each",
ylab="Relative expression",
main="Boxplots of microarrays with vsn normalized data")
boxplot.GSE15744.vsnrma <- boxplot(exprs(data.GSE15744.vsnrma), col = rainbow(15),
cex.axis=0.5,
las=2,
ylab="Relative expression",
main="Boxplots of microarrays with vsn normalized data")
meansd.GSE15744.vsnrma <- meanSdPlot(data.GSE15744.vsnrma, xlab="Rank (mean)", ylab="Standard Deviation")
meansdplot.GSE15744.vsnrma <- meansd.GSE15744.vsnrma$gg + ggtitle("Mean-Sd-Plot of vsn normalized data GSE15744")
?eSet
for(i in 1:17){
plot(eset[,c(i,i+1)], pch=".", cex=2)
abline(0, 1, col="red")
plot(eset[,c(5,5+1)], pch=".", cex=2)
plot(expr(data.GSE15744.vsnrma)[,c(4,5)], pch=".", cex=2)
exprdata.GSE15744.vsnrma <- expr(data.GSE15744.vsnrma
)
plot(exprdata.GSE15744.vsnrma[,c(4,5)], pch=".", cex=2)
exprdata.GSE15744.vsnrma
exprdata.GSE15744.vsnrma <- exprs(data.GSE15744.vsnrma)
exprdata.GSE15744.vsnrma
exprsdata.GSE15744.vsnrma <- exprs(data.GSE15744.vsnrma)
plot(exprs(data.GSE15744.vsnrma)[,c(4,5)], pch=".", cex=2)
abline(0, 1, col="red")
plot(exprs(data.GSE15744.vsnrma)[,c(4,5)], pch=".", cex=2)
abline(0, 1, col="red")
title(main = paste("Scatterplot of microarray",
substr(colnames(GSE15744.vsnrma)[4], 1, nchar(colnames(GSE15744.vsnrma)[i])), "and",
substr(colnames(GSE15744.vsnrma)[5], 1, nchar(colnames(GSE15744.vsnrma)[i+1])), "in   week 5",
sep=" ", collapse = NULL))
plot(exprs(data.GSE15744.vsnrma)[,c(4,5)], pch=".", cex=2)
abline(0, 1, col="red")
title(main = paste("Scatterplot of microarray", substr(colnames(data.GSE15744.vsnrma)[4], 1, nchar(colnames(data.GSE15744.vsnrma)[4])), "and", substr(colnames(data.GSE15744.vsnrma)[5], 1, nchar(colnames(data.GSE15744.vsnrma)[5])), "in   week 5", sep=" ", collapse = NULL))
# adjusting the rownames and columnnames by cutting the .cel
rownames(pData(data.GSE15744)) <- substr(rownames(pData(data.GSE15744)), 1, nchar(rownames(pData(data.GSE15744)))-4)
colnames(pData(data.GSE15744)) <- substr(colnames(pData(data.GSE15744)), 1, nchar(colnames(pData(data.GSE15744)))-4)
olnames(pData(data.GSE15744))
colnames(pData(data.GSE15744))
rownames(pData(data.GSE15744))
pData(data.GSE15744)
colnames(exprs(data.GSE15744)
)
colnames(exprs(data.GSE15744)) <- substr(colnames(exprs(data.GSE15744)), 1, nchar(colnames(exprs(data.GSE15744)))-4)
plot(exprs(data.GSE15744.vsnrma)[,c(4,5)], pch=".", cex=2)
abline(0, 1, col="red")
title(main = paste("Scatterplot of microarray", substr(colnames(data.GSE15744.vsnrma)[4], 1, nchar(colnames(data.GSE15744.vsnrma)[4])), "and", substr(colnames(data.GSE15744.vsnrma)[5], 1, nchar(colnames(data.GSE15744.vsnrma)[5])), "in   week 5", sep=" ", collapse = NULL))
scatterplot.GSE15744.vsnrma <- plot(exprs(data.GSE15744.vsnrma)[,c(4,5)], pch=".", cex=2)
abline(0, 1, col="red")
title(main = paste("Scatterplot of microarray", substr(colnames(data.GSE15744.vsnrma)[4], 1, nchar(colnames(data.GSE15744.vsnrma)[4])), "and", substr(colnames(data.GSE15744.vsnrma)[5], 1, nchar(colnames(data.GSE15744.vsnrma)[5])), "in week 5", sep=" ", collapse = NULL))
scatterplot.GSE15744.vsnrma
?ggplot
ggplot(data = exprs(data.GSE15744.vsnrma), mapping = aes(data.GSE15744.vsnrma[,4], data.GSE15744.vsnrma[,5]))
scatterplot.GSE15744.vsnrma <- ggplot(data = as.data.frame(exprs(data.GSE15744.vsnrma)), mapping = aes(as.data.frame(exprs(data.GSE15744.vsnrma))[,4], as.data.frame(exprs(data.GSE15744.vsnrma))[,5]))
scatterplot.GSE15744.vsnrma
as.data.frame(exprs(data.GSE15744.vsnrma))[,4]
str(as.data.frame(exprs(data.GSE15744.vsnrma))[,4])
str(as.data.frame(exprs(data.GSE15744.vsnrma)))
scatterplot.GSE15744.vsnrma <- geom_point(data = as.data.frame(exprs(data.GSE15744.vsnrma)), mapping = aes(as.data.frame(exprs(data.GSE15744.vsnrma))[,4], as.data.frame(exprs(data.GSE15744.vsnrma))[,5]))
scatterplot.GSE15744.vsnrma
ggplot(data = as.data.frame(exprs(data.GSE15744.vsnrma)), mapping = aes(as.data.frame(exprs(data.GSE15744.vsnrma))[,4], as.data.frame(exprs(data.GSE15744.vsnrma))[,5])) + geom_point(data = as.data.frame(exprs(data.GSE15744.vsnrma)), mapping = aes(as.data.frame(exprs(data.GSE15744.vsnrma))[,4], as.data.frame(exprs(data.GSE15744.vsnrma))[,5]))
str(exprs(data.GSE15744.vsnrma))
scatterplot.GSE15744.vsnrma <- ggplot(data = exprs.GSE15744.vsnrma,
mapping = aes(exprs.GSE15744.vsnrma[,4], exprs.GSE15744.vsnrma[,5])) +
geom_point(data = exprs.GSE15744.vsnrma,
mapping = aes(exprs.GSE15744.vsnrma[,4], exprs.GSE15744.vsnrma[,5])) +
theme_classic()
exprs.GSE15744.vsnrma <- as.data.frame(exprs(data.GSE15744.vsnrma))
scatterplot.GSE15744.vsnrma <- ggplot(data = exprs.GSE15744.vsnrma,
mapping = aes(exprs.GSE15744.vsnrma[,4], exprs.GSE15744.vsnrma[,5])) +
geom_point(data = exprs.GSE15744.vsnrma,
mapping = aes(exprs.GSE15744.vsnrma[,4], exprs.GSE15744.vsnrma[,5])) +
theme_classic()
scatterplot.GSE15744.vsnrma
scatterplot.GSE15744.vsnrma <- ggplot(data = exprs.GSE15744.vsnrma,
mapping = aes(exprs.GSE15744.vsnrma[,4], exprs.GSE15744.vsnrma[,5])) +
geom_point(
mapping = aes(exprs.GSE15744.vsnrma[,4], exprs.GSE15744.vsnrma[,5])) +
geom_abline()
scatterplot.GSE15744.vsnrma
scatterplot.GSE15744.vsnrma <- ggplot(data = exprs.GSE15744.vsnrma,
mapping = aes(exprs.GSE15744.vsnrma[,4], exprs.GSE15744.vsnrma[,5])) +
geom_point(
mapping = aes(exprs.GSE15744.vsnrma[,4], exprs.GSE15744.vsnrma[,5])) +
geom_abline(intersept = 0, slope = 1, aes(colour = "red"))
scatterplot.GSE15744.vsnrma
scatterplot.GSE15744.vsnrma <- ggplot(data = exprs.GSE15744.vsnrma,
mapping = aes(exprs.GSE15744.vsnrma[,4], exprs.GSE15744.vsnrma[,5])) +
geom_point(
mapping = aes(exprs.GSE15744.vsnrma[,4], exprs.GSE15744.vsnrma[,5])) +
geom_abline(intersept = 0, slope = 1, col = "red", aes(size=1))
scatterplot.GSE15744.vsnrma
scatterplot.GSE15744.vsnrma <- ggplot(data = exprs.GSE15744.vsnrma,
) +
geom_point(
mapping = aes(exprs.GSE15744.vsnrma[,4], exprs.GSE15744.vsnrma[,5])) +
geom_abline(intersept = 0, slope = 1, col = "red", aes(size=1))
scatterplot.GSE15744.vsnrma
scatterplot.GSE15744.vsnrma <- ggplot(data = exprs.GSE15744.vsnrma,
) +
geom_point(
mapping = aes(exprs.GSE15744.vsnrma[,4], exprs.GSE15744.vsnrma[,5], size = 0.5)) +
geom_abline(intersept = 0, slope = 1, col = "red", aes(size=1)) +
title(main = paste("Scatterplot of microarray", substr(colnames(data.GSE15744.vsnrma)[4], 1, nchar(colnames(data.GSE15744.vsnrma)[4])), "and", substr(colnames(data.GSE15744.vsnrma)[5], 1, nchar(colnames(data.GSE15744.vsnrma)[5])), "in week 5", sep=" ", collapse = NULL))
scatterplot.GSE15744.vsnrma <- ggplot(data = exprs.GSE15744.vsnrma,) +
geom_point(mapping = aes(exprs.GSE15744.vsnrma[,4], exprs.GSE15744.vsnrma[,5]), size = 0.5) +
geom_abline(intersept = 0, slope = 1, col = "red", aes(size=1))
scatterplot.GSE15744.vsnrma
scatterplot.GSE15744.vsnrma <- ggplot(data = exprs.GSE15744.vsnrma,) +
geom_point(mapping = aes(exprs.GSE15744.vsnrma[,4], exprs.GSE15744.vsnrma[,5]), size = 0.5) +
geom_abline(intersept = 0, slope = 1, col = "red", aes(size=1)) +
labs(title = paste("Scatterplot of microarray", substr(colnames(data.GSE15744.vsnrma)[4], 1, nchar(colnames(data.GSE15744.vsnrma)[4])), "and", substr(colnames(data.GSE15744.vsnrma)[5], 1, nchar(colnames(data.GSE15744.vsnrma)[5])), "in week 5", sep=" ", collapse = NULL)) +
xlab(substr(colnames(data.GSE15744.vsnrma)[4])) +
ylab(substr(colnames(data.GSE15744.vsnrma)[5])) +
theme_linedraw()
scatterplot.GSE15744.vsnrma <- ggplot(data = exprs.GSE15744.vsnrma,) +
theme_linedraw() +
geom_point(mapping = aes(exprs.GSE15744.vsnrma[,4], exprs.GSE15744.vsnrma[,5]), size = 0.5) +
geom_abline(intersept = 0, slope = 1, col = "red", aes(size=1)) +
labs(title = paste("Scatterplot of microarray", substr(colnames(data.GSE15744.vsnrma)[4], 1, nchar(colnames(data.GSE15744.vsnrma)[4])), "and", substr(colnames(data.GSE15744.vsnrma)[5], 1, nchar(colnames(data.GSE15744.vsnrma)[5])), "in week 5", sep=" ", collapse = NULL)) +
xlab(substr(colnames(data.GSE15744.vsnrma)[4])) +
ylab(substr(colnames(data.GSE15744.vsnrma)[5]))
scatterplot.GSE15744.vsnrma <- ggplot(data = exprs.GSE15744.vsnrma,) +
geom_point(mapping = aes(exprs.GSE15744.vsnrma[,4], exprs.GSE15744.vsnrma[,5]), size = 0.5) +
geom_abline(intersept = 0, slope = 1, col = "red", aes(size=1)) +
labs(title = paste("Scatterplot of microarray", substr(colnames(data.GSE15744.vsnrma)[4], 1, nchar(colnames(data.GSE15744.vsnrma)[4])), "and", substr(colnames(data.GSE15744.vsnrma)[5], 1, nchar(colnames(data.GSE15744.vsnrma)[5])), "in week 5", sep=" ", collapse = NULL)) +
xlab(substr(colnames(data.GSE15744.vsnrma)[4])) +
ylab(substr(colnames(data.GSE15744.vsnrma)[5]))
scatterplot.GSE15744.vsnrma <- ggplot(data = exprs.GSE15744.vsnrma,) +
#theme_linedraw() +
geom_point(mapping = aes(exprs.GSE15744.vsnrma[,4], exprs.GSE15744.vsnrma[,5]), size = 0.5) +
geom_abline(intersept = 0, slope = 1, col = "red", aes(size=1)) +
#labs(title = paste("Scatterplot of microarray", substr(colnames(data.GSE15744.vsnrma)[4], 1, nchar(colnames(data.GSE15744.vsnrma)[4])), "and", substr(colnames(data.GSE15744.vsnrma)[5], 1, nchar(colnames(data.GSE15744.vsnrma)[5])), "in week 5", sep=" ", collapse = NULL)) +
xlab(substr(colnames(data.GSE15744.vsnrma)[4])) +
ylab(substr(colnames(data.GSE15744.vsnrma)[5]))
scatterplot.GSE15744.vsnrma <- ggplot(data = exprs.GSE15744.vsnrma,) +
#theme_linedraw() +
geom_point(mapping = aes(exprs.GSE15744.vsnrma[,4], exprs.GSE15744.vsnrma[,5]), size = 0.5) +
geom_abline(intersept = 0, slope = 1, col = "red", aes(size=1))
scatterplot.GSE15744.vsnrma
scatterplot.GSE15744.vsnrma <- ggplot(data = exprs.GSE15744.vsnrma,) +
theme_linedraw() +
geom_point(mapping = aes(exprs.GSE15744.vsnrma[,4], exprs.GSE15744.vsnrma[,5]), size = 0.5) +
geom_abline(intersept = 0, slope = 1, col = "red", aes(size=1))
scatterplot.GSE15744.vsnrma
scatterplot.GSE15744.vsnrma <- ggplot(data = exprs.GSE15744.vsnrma,) +
theme_bw() +
geom_point(mapping = aes(exprs.GSE15744.vsnrma[,4], exprs.GSE15744.vsnrma[,5]), size = 0.5) +
geom_abline(intersept = 0, slope = 1, col = "red", aes(size=1))
scatterplot.GSE15744.vsnrma
scatterplot.GSE15744.vsnrma <- ggplot(data = exprs.GSE15744.vsnrma,) +
theme_bw() +
geom_point(mapping = aes(exprs.GSE15744.vsnrma[,4], exprs.GSE15744.vsnrma[,5]), size = 0.5) +
geom_abline(intersept = 0, slope = 1, col = "red", aes(size=1)) +
#labs(title = paste("Scatterplot of microarray", substr(colnames(data.GSE15744.vsnrma)[4], 1, nchar(colnames(data.GSE15744.vsnrma)[4])), "and", substr(colnames(data.GSE15744.vsnrma)[5], 1, nchar(colnames(data.GSE15744.vsnrma)[5])), "in week 5", sep=" ", collapse = NULL)) +
xlab(substr(colnames(data.GSE15744.vsnrma)[4])) +
ylab(substr(colnames(data.GSE15744.vsnrma)[5]))
scatterplot.GSE15744.vsnrma <- ggplot(data = exprs.GSE15744.vsnrma,) +
theme_bw() +
geom_point(mapping = aes(exprs.GSE15744.vsnrma[,4], exprs.GSE15744.vsnrma[,5]), size = 0.5) +
geom_abline(intersept = 0, slope = 1, col = "red", aes(size=1)) +
#geom_text() +
labs(title = paste("Scatterplot of microarray", substr(colnames(data.GSE15744.vsnrma)[4], 1, nchar(colnames(data.GSE15744.vsnrma)[4])), "and", substr(colnames(data.GSE15744.vsnrma)[5], 1, nchar(colnames(data.GSE15744.vsnrma)[5])), "in week 5", sep=" ", collapse = NULL))
scatterplot.GSE15744.vsnrma
scatterplot.GSE15744.vsnrma <- ggplot(data = exprs.GSE15744.vsnrma,) +
theme_bw() +
geom_point(mapping = aes(exprs.GSE15744.vsnrma[,4], exprs.GSE15744.vsnrma[,5]), size = 0.5) +
geom_abline(intersept = 0, slope = 1, col = "red", aes(size=1)) +
#geom_text() +
labs(title = paste("Scatterplot of microarray", substr(colnames(data.GSE15744.vsnrma)[4], 1, nchar(colnames(data.GSE15744.vsnrma)[4])), "and", substr(colnames(data.GSE15744.vsnrma)[5], 1, nchar(colnames(data.GSE15744.vsnrma)[5])), "in week 5", sep=" ", collapse = NULL),
x = substr(colnames(data.GSE15744.vsnrma)[4]),
y = substr(colnames(data.GSE15744.vsnrma)[5]))
substr(colnames(data.GSE15744.vsnrma)[5])
colnames(data.GSE15744.vsnrma)
colnames(data.GSE15744.vsnrma)[5])
colnames(data.GSE15744.vsnrma)[5]
scatterplot.GSE15744.vsnrma <- ggplot(data = exprs.GSE15744.vsnrma,) +
theme_bw() +
geom_point(mapping = aes(exprs.GSE15744.vsnrma[,4], exprs.GSE15744.vsnrma[,5]), size = 0.5) +
geom_abline(intersept = 0, slope = 1, col = "red", aes(size=1)) +
#geom_text() +
labs(title = paste("Scatterplot of microarray", substr(colnames(data.GSE15744.vsnrma)[4], 1, nchar(colnames(data.GSE15744.vsnrma)[4])), "and", substr(colnames(data.GSE15744.vsnrma)[5], 1, nchar(colnames(data.GSE15744.vsnrma)[5])), "in week 5", sep=" ", collapse = NULL),
x = colnames(data.GSE15744.vsnrma)[4],
y = colnames(data.GSE15744.vsnrma)[5])
scatterplot.GSE15744.vsnrma
OC_normalization_plot = arrangeGrob(grobs = list(meansd.GSE15744.vsnrma, boxplot.GSE15744.vsnrma, exprs.GSE15744.vsnrma), nrow=1, widths = c(3, 3, 3), heights = c(3))
OC_normalization_plot_output = as_ggplot(OC_normalization_plot) +
draw_plot_label(label = c("A", "B", "C"), size = 15, x = c(0.03, 0.35, 0.63), y = c(0.13, 0.13, 0.13))
annotate_figure(OC_normalization_plot_output, top = text_grob("Quality control: verifying the normalization at different levels of detail", color = "black", face = "bold", size = 16))
OC_normalization_plot = arrangeGrob(grobs = list(meansd.GSE15744.vsnrma, boxplot.GSE15744.vsnrma, exprs.GSE15744.vsnrma), nrow=1, widths = c(3, 3, 3), heights = c(3))
OC_normalization_plot
View(data.GSE15744)
